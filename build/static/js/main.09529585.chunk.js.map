{"version":3,"sources":["components/CustomNavbar.jsx","services/CekLogin.js","components/SideNav.jsx","components/data_user/ModalUser.jsx","components/Spinner.jsx","components/data_user/TableUser.jsx","components/Dashboard.jsx","components/Home.jsx","components/Login.jsx","components/data_user/DataUser.jsx","components/data_user/User.jsx","components/data_user/EditUserForm.jsx","components/data_user/EditUser.jsx","components/data_user/AddUserForm.jsx","components/data_user/AddUser.jsx","components/data_promotion/TablePromotion.jsx","components/data_promotion/DataPromotion.jsx","components/data_promotion/Promotion.jsx","components/data_promotion/AddPromotionForm.jsx","components/data_promotion/AddPromotion.jsx","components/data_promotion/EditPromotionForm.jsx","components/data_promotion/EditPromotion.jsx","components/data_career_category/TableCareerCategory.jsx","components/data_career_category/DataCareerCategory.jsx","components/data_career_category/CareerCategory.jsx","components/data_career_category/AddCareerCategoryForm.jsx","components/data_career_category/AddCareerCategory.jsx","components/data_career_category/EditCareerCategoryForm.jsx","components/data_career_category/EditCareerCategory.jsx","components/data_job_vacancy/TableJobVacancy.jsx","components/data_job_vacancy/DataJobVacancy.jsx","components/data_job_vacancy/JobVacancy.jsx","components/data_job_vacancy/UserDropdown.jsx","components/data_job_vacancy/CategoryDropdown.jsx","components/data_job_vacancy/AddJobVacancyForm.jsx","components/data_job_vacancy/AddJobVacancy.jsx","components/data_job_vacancy/EditJobVacancyForm.jsx","components/data_job_vacancy/EditJobVacancy.jsx","components/data_job_apply/TableJobApply.jsx","components/data_job_apply/DataJobApply.jsx","components/data_job_apply/JobApply.jsx","components/data_job_apply/JobDropdown.jsx","components/data_job_apply/AddJobApplyForm.jsx","components/data_job_apply/AddJobApply.jsx","components/data_job_apply/EditJobApplyForm.jsx","components/data_job_apply/EditJobApply.jsx","components/NotFound.jsx","App.jsx","index.js"],"names":["CustomNavbar","props","handlePropsToggleSidebar","val","myPropsToggle","toggleSidebar","setState","toggle","state","toggleCollapse","isOpen","logout","localStorage","clear","window","location","href","show","getItem","to","pathname","notLogin","CekLogin","color","dark","expand","style","this","marginLeft","position","zIndex","className","onClick","cursor","id","navbar","right","marginRight","nav","caret","icon","Component","SideNav","business","businessProps","businessManagement","activeClassName","bind","float","fontSize","marginTop","transition","transform","display","borderTop","ModalUser","modal","Spinner","role","TableUser","verifiedUser","id_profile","url_photo","nik","name","gender","birth_location","birthdate","address","postal_code","faculty","department","generation","a","is_verified","is_forum","is_marketplace","username","id_country","id_province","id_district","id_village","confirm","https","require","agent","Agent","rejectUnauthorized","form","FormData","append","axios","method","url","httpsAgent","headers","data","then","response","console","log","getData","activePage","catch","error","deleteUser","handlePageChange","pageNumber","totalUsers","curPage","loading","is_active","password","email","telp","text","confirm_password","offset","get","results","totalUser","count","no","total","tableTr","map","user","active","suspend","verified","profile","type","suspendUser","margin","width","id_prvince","key","minWidth","overflowY","modalClick","colSpan","justifyContent","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","innerClass","itemClass","linkClass","prevPageText","nextPageText","firstPageText","lastPageText","Dashboard","padding","minHeight","Login","submitHandler","event","preventDefault","post","res","status","is_superuser","setItem","access","redirect","fail","changeHandler","target","value","notAdmin","undefined","size","src","alt","onSubmit","noValidate","autoComplete","label","required","invalidUsername","textAlign","DataUser","User","myToggle","handleToggle","params","EditUserForm","photo","document","querySelector","classList","remove","innerHTML","getElementsByClassName","Object","entries","addErrorToField","msg","changeRadio","nr","rows","checked","EditUser","match","AddUserForm","e","errors","height","action","AddUser","TablePromotion","deletePromo","httpAgent","totalData","pageNum","dataPromo","promo","id_promotion","promotion_title","description","url_banner","created_at","expired_date","expired_text","DataPromotion","Promotion","AddPromotionForm","fileHandler","files","token","expired","choose_file","encType","ref","aria-describedby","htmlFor","spellCheck","AddPromotion","EditPromotionForm","handleChange","reader","FileReader","onload","f","getElementById","setAttribute","result","readAsDataURL","handleSubmit","Date","d","date","getDate","month","getMonth","getFullYear","marginBottom","EditPromotion","TableCareerCategory","deleteCareerCategory","category","cat","id_category","url_image","DataCareerCategory","CareerCategory","AddCareerCategoryForm","handleImage","AddCareerCategory","EditCareerCategoryForm","handleFile","EditCareerCategory","TableJobVacancy","deleteJobVacancy","job","jobvacancy","id_job","category_name","company_name","type_job","function_job","required_skill","title_joblist","title","DataJobVacancy","JobVacancy","UserDropdown","CategoryDropdown","AddJobVacancyForm","getAllCategory","categoryDropdown","getAllUser","usernameDropdown","image_job","experience_job","desc","accept","AddJobVacancy","EditJobVacancyForm","getJobVacancy","ex","split","EditJobApply","TableJobApply","deleteJobApply","jobApply","apply","trx_job","apply_date","attachment_code","url_attachment","DataJobApply","JobApply","JobDropdown","AddJobApplyForm","body_messages","getAllJob","jobDropdown","AddJobApply","EditJobApplyForm","getJobApply","Axios","err","loadingJob","jobs","loadingUser","users","NotFound","top","bottom","left","fontWeight","fontFamily","App","exact","path","component","EditJobVacancy","ReactDOM","render"],"mappings":"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","file":"static/js/main.09529585.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  // MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBDropdown,  \r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBDropdownToggle,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport \"./CustomNavbar.css\";\r\nimport { CekLogin } from \"../services/CekLogin.js\";\r\n\r\nclass CustomNavbar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen: false,\r\n      toggle: props.show\r\n    };\r\n  }\r\n\r\n  handlePropsToggleSidebar = (val) => {\r\n    this.props.myPropsToggle(val)\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    }, () => {\r\n      this.handlePropsToggleSidebar(this.state.toggle)\r\n    })\r\n  }\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  logout = () => {\r\n    localStorage.clear();\r\n    // return <CekLogin />\r\n    window.location.href = \"http://localhost:3000\";\r\n  }\r\n\r\n  render() {\r\n    if (!CekLogin()) {\r\n      return (<Redirect to=\"/\" />)\r\n    }\r\n\r\n    return (\r\n      <MDBNavbar color=\"primary-color\" dark expand=\"md\" style={this.state.toggle ? { marginLeft: '0', position: 'relative', zIndex: '9' } : { marginLeft: '270px', position: 'relative', zIndex: '9' }}>\r\n        <MDBNavbarBrand>\r\n          <i className=\"navbar-toggler-icon waves-effect waves-light\" onClick={this.toggleSidebar} style={{ cursor: 'pointer' }}></i>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem style={{marginRight: '1em'}}>\r\n              <MDBDropdown>\r\n                {/* <CekLogin isLogin={this.state.isLogin} /> */}\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" /> Administrator \r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  {/* <MDBDropdownItem href=\"#!\">\r\n                    <MDBIcon icon=\"user\" /> Profile\r\n                  </MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">\r\n                    <MDBIcon icon=\"cog\" /> Settings\r\n                  </MDBDropdownItem> */}\r\n                  <MDBDropdownItem href=\"!#\" onClick={this.logout}>\r\n                    <MDBIcon icon=\"sign-out-alt\" /> Logout\r\n                  </MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomNavbar;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport function CekLogin() {\r\n    if(localStorage.getItem('token')) {\r\n        return <Redirect to={{\r\n            pathname: '/',\r\n            state: {\r\n                notLogin: true\r\n            }\r\n        }}/>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass SideNav extends Component {\r\n    state = {\r\n        business: this.props.businessProps\r\n    }\r\n\r\n    businessManagement = () => {\r\n        this.setState({ business: !this.state.business });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"sidebar-fixed-inactive\" : \"sidebar-fixed\"}>\r\n                <a href=\"#!\" className=\"logo-wrapper waves-effect\">\r\n                    <h2>TRISAKTI DASHBOARD</h2>\r\n                </a>\r\n                <div className=\"scrollable\">\r\n                <MDBListGroup className=\"list-group-flush\">\r\n                    <NavLink to=\"/home\" activeClassName=\"activeClass\">\r\n                        <MDBListGroupItem>\r\n                            <MDBIcon icon=\"user\" className=\"mr-4\"/> User Management\r\n                        </MDBListGroupItem>\r\n                    </NavLink>  \r\n                    <NavLink to=\"/promotion\" activeClassName=\"activeClass\">\r\n                        <MDBListGroupItem>\r\n                            <MDBIcon icon=\"ticket-alt\" className=\"\" style={{ marginRight: '20px' }}/>\r\n                            Promo Management\r\n                        </MDBListGroupItem>\r\n                    </NavLink>\r\n                    {/* <NavL activeClassName=\"activeClass\"> */}\r\n                        <MDBListGroupItem onClick={this.businessManagement.bind(this)} style={{cursor: 'pointer'}}>\r\n                            <MDBIcon icon=\"business-time\" className=\"mr-3\"/>\r\n                            Business Management\r\n                            <MDBIcon icon=\"chevron-right\" style={this.state.business === true ? {float: 'right', fontSize: '12px', marginTop: '8px', transition: '0.3s', transform: 'rotate(90deg)'} : {float: 'right', fontSize: '12px', marginTop: '8px', transition: '0.3s',}} />\r\n                        </MDBListGroupItem>\r\n                    {/* </NavL> */}\r\n                    {/* DROPDOWN */}\r\n                    <MDBListGroup className=\"list-group-flush\" style={this.state.business === true ? {display: '', transition: '0.3s'} : {display: 'none', transition: '0.3s'} }>\r\n                    {/* <MDBListGroup className=\"list-group-flush\"> */}\r\n                        <NavLink to=\"/business/career-category\" activeClassName=\"activeClass\" style={{borderTop: '1px solid #eee'}}>\r\n                            <MDBListGroupItem>\r\n                                <MDBIcon style={{marginLeft: '35px'}} icon=\"business-time\" className=\"mr-2\"/> Career Category\r\n                            </MDBListGroupItem>\r\n                        </NavLink> \r\n                        <NavLink to=\"/business/job-vacancy\" activeClassName=\"activeClass\">\r\n                            <MDBListGroupItem>\r\n                                <MDBIcon style={{marginLeft: '35px'}} icon=\"business-time\" className=\"mr-2\"/> Job Vacancy\r\n                            </MDBListGroupItem>\r\n                        </NavLink>\r\n                        <NavLink to=\"/business/job-apply\" activeClassName=\"activeClass\">\r\n                            <MDBListGroupItem>\r\n                                <MDBIcon style={{marginLeft: '35px'}} icon=\"business-time\" className=\"mr-2\"/> Job Apply\r\n                            </MDBListGroupItem>\r\n                        </NavLink>\r\n                    </MDBListGroup>\r\n                    {/* END DROPDOWN */}\r\n                </MDBListGroup>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNav;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nclass ModalUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal isOpen={this.props.modal} >\r\n          <MDBModalHeader >MDBModal title</MDBModalHeader>\r\n          <MDBModalBody>\r\n            modal body\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n            <MDBBtn color=\"primary\">Save changes</MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ModalUser;","import React from \"react\";\r\n// import { MDBSpinner } from 'mdbreact'; // premium component\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <>\r\n        <div className=\"spinner-border text-success\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport ModalUser from './ModalUser';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from \"react-js-pagination\";\r\nimport Spinner from '../Spinner';\r\n\r\nexport class TableUser extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activePage: 1,\r\n      totalUsers: 1,\r\n      curPage: 1,\r\n      data: [],\r\n      modal: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  async suspendUser(id, username, is_active, password, email, telp, text) {\r\n    if (window.confirm('Are you sure want to ' + text + ' ' + username + '?')) {\r\n      const https = require('https');\r\n      const agent = new https.Agent({\r\n        rejectUnauthorized: false\r\n      });\r\n\r\n      await axios({\r\n        method: 'PUT',\r\n        url: 'https://103.14.21.56:7443/api/v1/users/user/' + id + '/',\r\n        httpsAgent: agent,\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n        data: {\r\n          // id: id,\r\n          is_active: is_active,\r\n          username: username,\r\n          password: password,\r\n          confirm_password: password,\r\n          email: email,\r\n          telp: telp\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        this.getData(this.state.activePage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  async getData(pageNumber) {\r\n    let offset = (pageNumber - 1) * 10;\r\n    console.log('offset =' + offset)\r\n\r\n    const https = require('https');\r\n    const agent = new https.Agent({\r\n      rejectUnauthorized: false\r\n    });\r\n\r\n    await this.setState({ loading: true }, () => {\r\n      axios.get('https://103.14.21.56:7443/api/v1/users/user/' + '?limit=10&offset=' + offset, {\r\n        httpsAgent: agent,\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n      })\r\n        .then(response => {\r\n          console.log(response)\r\n          this.setState({\r\n            loading: false,\r\n            data: response.data.results,\r\n            totalUser: response.data.count\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  verifiedUser = async (id_profile, url_photo, nik, name, gender, birth_location, birthdate, address, postal_code, faculty, department, generation, is_verified=false, is_forum=false, is_marketplace=false, username, id_country, id_province, id_district, id_village) => {\r\n    if (window.confirm('Are you sure want to make this ' + username + ' verified?')) {\r\n      const https = require('https');\r\n      const agent = new https.Agent({\r\n        rejectUnauthorized: false\r\n      });\r\n\r\n      let form = new FormData();\r\n      form.append('id_profile', id_profile)\r\n      // form.append('url_photo', '')\r\n      form.append('nik', nik)\r\n      form.append('name', name)\r\n      form.append('gender', gender)\r\n      form.append('birth_location', birth_location)\r\n      form.append('birthdate', birthdate)\r\n      form.append('address', address)\r\n      form.append('postal_code', postal_code)\r\n      form.append('faculty', faculty)\r\n      form.append('department', department)\r\n      form.append('generation', generation)\r\n      form.append('is_verified', is_verified)\r\n      form.append('is_forum', is_forum)\r\n      form.append('is_marketplace', is_marketplace)\r\n      form.append('username', username)\r\n      form.append('id_country', id_country)\r\n      form.append('id_province', id_province)\r\n      form.append('id_district', id_district)\r\n      form.append('id_village', id_village)\r\n\r\n      await axios({\r\n        method: 'PUT',\r\n        url: 'https://103.14.21.56:7443/api/v1/users/user-profile/' + id_profile + '/',\r\n        httpsAgent: agent,\r\n        headers: { \r\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        data: form\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        this.getData(this.state.activePage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteUser = async (id, username) => {\r\n    if (window.confirm('Are you sure want to delete ' + username + '?')) {\r\n      const https = require('https');\r\n      const agent = new https.Agent({\r\n        rejectUnauthorized: false\r\n      });\r\n\r\n      await axios({\r\n        method: 'DELETE',\r\n        url: 'https://103.14.21.56:7443/api/v1/users/user/' + id + '/',\r\n        httpsAgent: agent,\r\n        headers: { \r\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        // data: form\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        this.getData(this.state.activePage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({\r\n      activePage: pageNumber\r\n    }, () => {\r\n      this.getData(pageNumber);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(1);\r\n  }\r\n\r\n\r\n  render() {\r\n    let no = (this.state.activePage - 1) * 10 + 1;\r\n    let total = this.state.totalUser;\r\n\r\n    const tableTr = this.state.data.map((user) => {\r\n      let active, suspend, verified;\r\n      let profile = user.profile[0];\r\n\r\n      if (user.is_active) {\r\n        active = <MDBIcon icon=\"check-circle\" className=\"green-text\" />;\r\n        suspend = <button type=\"button\" className=\"btn btn-sm btn-elegant\" onClick={this.suspendUser.bind(this, user.id, user.username, false, user.password, user.email, user.telp, 'suspend')} style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-check\" /> Suspend</button>;\r\n      } else {\r\n        active = <MDBIcon icon=\"plus-circle\" className=\"red-text\" style={{ transform: 'rotate(45deg)' }} />;\r\n        suspend = <button type=\"button\" className=\"btn btn-sm\" onClick={this.suspendUser.bind(this, user.id, user.username, true, user.password, user.email, user.telp, 'unsuspend')} style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-slash\" /> Unsuspend</button>;\r\n      }\r\n\r\n      if ( profile.name !== null && profile.gender !== null && profile.birth_location !== null && profile.birthdate !== null && profile.address !== null && profile.postal_code !== null && profile.faculty !== null && profile.department !== null && profile.generation !== null && profile.id_country !== null && profile.id_prvince !== null && profile.id_district !== null && profile.id_village !== null && profile.is_verified == false) \r\n      {\r\n        verified = <button type=\"button\" \r\n                  className=\"btn btn-sm btn-success\" \r\n                  onClick={ this.verifiedUser.bind(this, profile.id_profile, profile.url_photo, profile.nik, profile.name, profile.gender, profile.birth_location, profile.birthdate, profile.address, profile.postal_code, profile.faculty, profile.department, profile.generation, true, profile.is_forum, profile.is_marketplace, profile.username, profile.id_country, profile.id_province, profile.id_district, profile.id_village) } \r\n                  style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-check\" /> Verified</button>;\r\n      } \r\n      else if( profile.name !== null && profile.gender !== null && profile.birth_location !== null && profile.birthdate !== null && profile.address !== null && profile.postal_code !== null && profile.faculty !== null && profile.department !== null && profile.generation !== null && profile.id_country !== null && profile.id_prvince !== null && profile.id_district !== null && profile.id_village !== null && profile.is_verified == true) \r\n      {\r\n        verified = <MDBIcon icon=\"check-circle\" className=\"green-text\" />;\r\n      } \r\n      else \r\n      {\r\n        verified = <button type=\"button\" className=\"btn btn-sm\" style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-slash\" /> Verified</button>;\r\n      }\r\n\r\n      return (\r\n        <tr key={user.id}>\r\n          <td className=\"text-center\">{no++}</td>\r\n          <td style={{minWidth: '120px'}}>{user.username}</td>\r\n          <td style={{minWidth: '180px'}}>{profile.name}</td>\r\n          <td>{user.email}</td>\r\n          <td style={{minWidth: '200px'}}>{profile.address}</td>\r\n          <td className=\"text-center\">{profile.gender}</td>\r\n          <td>{user.telp}</td>\r\n          <td className=\"text-center\">{active}</td>\r\n          <td className=\"text-center\">{verified}</td>\r\n          <td className=\"text-center\">{suspend}</td>\r\n          <td className=\"text-center\">\r\n            <Link to={{\r\n              pathname: \"/home/edit-user/\" + user.id,\r\n              state: {\r\n                myPropsToggle: this.props.myPropsToggle\r\n              }\r\n            }}>\r\n              <button type=\"button\" className=\"btn btn-purple btn-sm waves-effect waves-light\" style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"edit\" /> Edit</button>\r\n            </Link>\r\n          </td>\r\n          <td>\r\n            <MDBBtn type=\"button\" className=\"btn-sm\" color=\"danger\" onClick={this.deleteUser.bind(this, user.id, user.username)} style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"trash\" /> Delete</MDBBtn>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"table-responsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n          <ModalUser modal={this.state.modal} modalClick={this.suspendUser} />\r\n          <Link to={{\r\n            pathname: \"/home/add-user/\",\r\n            state: {\r\n              myPropsToggle: this.props.myPropsToggle\r\n            }\r\n          }}>\r\n            <MDBBtn type=\"button\" color=\"success\"><MDBIcon icon=\"plus-circle\" /> Add User</MDBBtn>\r\n          </Link>\r\n          <table className=\"table table-hover\">\r\n            <thead>\r\n              <tr className=\"text-center\">\r\n                <th>No</th>\r\n                <th>Username</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Address</th>\r\n                <th>Gender</th>\r\n                <th>Telp</th>\r\n                <th>Active</th>\r\n                <th>Verified</th>\r\n                <th>Suspend</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.loading ? <tr><td colSpan=\"12\" className=\"text-center\"><Spinner /></td></tr> : tableTr}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n\r\n        <nav style={{ display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\r\n          <Pagination\r\n            activePage={this.state.activePage}\r\n            itemsCountPerPage={10}\r\n            totalItemsCount={total}\r\n            pageRangeDisplayed={5}\r\n            onChange={this.handlePageChange}\r\n            innerClass=\"pagination pagination-circle pg-red\"\r\n            itemClass=\"page-item\"\r\n            linkClass=\"page-link waves-effect waves-effect\"\r\n            prevPageText=\"&laquo;\"\r\n            nextPageText=\"&raquo;\"\r\n            firstPageText=\"First\"\r\n            lastPageText=\"Last\"\r\n          />\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableUser\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableUser from './data_user/TableUser';\r\nimport ModalUser from './data_user/ModalUser';\r\n\r\nexport class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody style={{ minHeight: 'calc(100vh - 90px)' }}>\r\n                            <TableUser myPropsToggle={this.props.myPropsToggle}/>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n                <ModalUser isOpen={this.toggle.bind(this)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component, Fragment } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { MDBContainer, MDBRow, MDBJumbotron } from \"mdbreact\";\r\nimport CustomNavbar from './CustomNavbar';\r\nimport SideNav from './SideNav';\r\nimport Dashboard from './Dashboard';\r\n// import Footer from './Footer';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    myToggle: false\r\n  }\r\n\r\n  handleToggle = (params) => {\r\n    this.setState({\r\n      myToggle: params\r\n    })\r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   document.title = \"Admin Trisakti | User Management\"\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <SideNav myPropsToggle={ this.state.myToggle } />\r\n        <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myToggle} />\r\n        <Dashboard myPropsToggle={ this.state.myToggle } />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { MDBInput, MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBAlert, MDBIcon } from \"mdbreact\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from './Spinner';\r\n// import AlertCustom from './alert/AlertCustom';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            redirect: false,\r\n            fail: false,\r\n            notAdmin: false,\r\n            notLogin: props.location.state !== undefined ? true : false\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({loading: true}, () => {\r\n            axios.post('https://103.14.21.56:7443/api/v1/token/', {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.status === 200) {\r\n                    if (res.data.is_superuser === true) {\r\n                        localStorage.setItem('token', res.data.access);\r\n                        localStorage.setItem('username', res.data.username);\r\n                        this.setState({loading: false, redirect: true});\r\n                    } else {\r\n                        this.setState({fail: true, redirect: false, loading: false});\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading: false, \r\n                    fail: true\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/home\" />);\r\n        }\r\n\r\n        return (\r\n            <MDBContainer className=\"pb-4\">\r\n                {/* <AlertCustom show={true} text=\"Sucecss updated data\" /> */}\r\n                <MDBRow className=\"mb-4\">\r\n                    <MDBCol size=\"6\" className=\"mb-4 offset-3\">\r\n                        <MDBCard style={{marginTop: '100px'}}>\r\n                            <MDBCardBody>\r\n                                <center>\r\n                                    <img src=\"https://img.icons8.com/color/96/000000/lock.png\" alt=\"\" />\r\n                                    <h2><b>LOGIN</b></h2>\r\n                                    <div className=\"err-login\"></div>\r\n                                    { this.state.notLogin === true ? <div className=\"alert alert-info\" role=\"alert\">\r\n                                        You're session has expired, please login again.\r\n                                        </div> : '' }\r\n                                    { this.state.fail === true ? <MDBAlert color=\"danger\" >\r\n                                        <MDBIcon icon=\"exclamation-triangle\" /> Inccorect username or password given!\r\n                                        </MDBAlert> : ''}\r\n                                </center>\r\n                                <form method=\"POST\" className=\"needs-validation\" onSubmit={this.submitHandler} noValidate>\r\n                                    <MDBInput\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        autoComplete=\"off\"\r\n                                        id=\"materialFormRegisterNameEx\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.changeHandler}\r\n                                        label=\"Username\"\r\n                                        icon=\"user\"\r\n                                        required\r\n                                    >\r\n                                        <span className=\"help-block text-danger\"> {this.state.invalidUsername}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"valid-feedback\"></div>\r\n                                    <MDBInput\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        id=\"materialFormRegisterPasswordEx4\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.changeHandler}\r\n                                        icon=\"lock\"\r\n                                        autoComplete=\"off\"\r\n                                        required\r\n                                    />\r\n                                    {this.state.loading === true ? <div style={{textAlign: 'center'}}><Spinner /></div> : <MDBBtn className=\"btn btn-dark btn-block\" type=\"submit\">Login</MDBBtn>}\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableUser from './TableUser';\r\n\r\n\r\nexport class DataUser extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{ minHeight: 'calc(100vh - 90px)' }}>\r\n                        <MDBCardBody>\r\n                            <TableUser myPropsToggle={this.props.myPropsToggle}/>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataUser\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport DataUser from './DataUser';\r\n\r\nexport class User extends Component {\r\n    state = {\r\n        myToggle: false\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataUser myPropsToggle={ this.state.myToggle } />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react';\r\nimport { MDBInput, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport class EditUserForm extends Component {\r\n    // constructor(props) {\r\n    //     super(props)\r\n        state = {\r\n            id: '',\r\n            username: '',\r\n            id_profile: '',\r\n            nik: '',\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            generation: 0,\r\n            gender: '',\r\n            telp: '',\r\n            active: '',\r\n            photo: '',\r\n            redirect: false,\r\n            error: false\r\n        }\r\n    // }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        document.querySelector(\".form-control\").classList.remove(\"invalid\");\r\n        console.log('clicked');\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url: 'https://103.14.21.56:7443/api/v1/users/user-profile/' + this.state.id_profile + '/',\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n            httpsAgent: agent,\r\n            data: {\r\n                id: this.state.id,\r\n                username: this.state.username,\r\n                id_profile: this.state.id_profile,\r\n                nik: this.state.nik,\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                address: this.state.address,\r\n                generation: this.state.generation,\r\n                gender: this.state.gender,\r\n                telp: this.state.telp,\r\n                is_active: this.state.active, \r\n                url_photo: null,\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            document.querySelector(\".error-message\").innerHTML = '';\r\n            document.querySelector(\".form-control\").classList.remove(\"invalid\");\r\n\r\n            this.setState({\r\n                redirect: true,\r\n                error: false\r\n            });\r\n        })\r\n        .catch(error => {\r\n            document.getElementsByClassName(\"error-message\").innerHTML = '';\r\n            document.querySelector(\".form-control\").classList.remove('.invalid');\r\n\r\n            this.setState({error: true})\r\n            Object.entries(error.response.data).map((key, val) => {\r\n                this.addErrorToField(key[0], key[1][0]);\r\n            });\r\n        });\r\n    }\r\n\r\n    addErrorToField = (name='', msg='') => {\r\n        if(this.state.error === true) {\r\n            var el = document.querySelector('[name=\"'+name+'\"]')\r\n            // el.classList.remove('invalid');\r\n            // el.classList.add('invalid');\r\n\r\n            document.querySelector(\".error-\" + name).innerHTML = msg;\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/' + this.props.id, {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n        })\r\n        .then(response => {\r\n            // console.log(response.data);\r\n            this.setState({\r\n                id: response.data.id,\r\n                id_profile: response.data.profile[0].id_profile,\r\n                nik: response.data.profile[0].nik === null ? '' : response.data.profile[0].nik,\r\n                username: response.data.username,\r\n                name: response.data.profile[0].name === null ? '' : response.data.profile[0].name,\r\n                email: response.data.email,\r\n                address: response.data.profile[0].address === null ? '' : response.data.profile[0].address,\r\n                gender: response.data.profile[0].gender === null ? 'L' : response.data.profile[0].gender,\r\n                generation: response.data.profile[0].generation === null ? 0 : response.data.profile[0].generation,\r\n                telp: response.data.telp,\r\n                active: response.data.is_active\r\n            });\r\n            // console.log(this.state)\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    changeRadio = nr => () => {\r\n        // console.log('jenis = ' +nr)\r\n        this.setState({\r\n            gender: nr,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.radio)\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/home\" />);\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{ padding: '0' }}>\r\n                    <MDBCard style={{ width: '100%' }}>\r\n                        <MDBCardBody>\r\n                            <MDBCardTitle className=\"teal-text\">Edit User</MDBCardTitle>\r\n                            <form method=\"POST\" onSubmit={this.submitHandler} noValidate>\r\n                                <MDBRow>\r\n                                    <MDBCol size=\"6\">\r\n                                        <div className=\"form-group\">\r\n                                            <MDBInput label=\"Username\" size=\"md\" value={this.state.username} onChange={this.changeHandler} name=\"username\">\r\n                                                <span className=\"error-username error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"NIK\" size=\"md\" value={this.state.nik} onChange={this.changeHandler} name=\"nik\" autoComplete=\"off\">\r\n                                                <span className=\"error-nik error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"Name\" size=\"md\" value={this.state.name} onChange={this.changeHandler} name=\"name\">\r\n                                                <span className=\"error-name error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"Email\" size=\"md\" value={this.state.email} onChange={this.changeHandler} name=\"email\">\r\n                                                <span className=\"error-email error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"Address\" type=\"textarea\" size=\"md\" rows=\"4\" value={this.state.address} onChange={this.changeHandler} name=\"address\">\r\n                                                <span className=\"error-address error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <div className=\"form-inline\">\r\n                                                <MDBInput onClick={this.changeRadio('L')} onChange={this.changeHandler} checked={this.state.gender === 'L' ? true : false} label=\"Laki-laki\" value=\"L\" type=\"radio\" id=\"radio1\" />\r\n                                                <MDBInput onClick={this.changeRadio('P')} onChange={this.changeHandler} checked={this.state.gender === 'P' ? true : false} label=\"Perempuan\" value=\"P\" type=\"radio\" id=\"radio2\" />\r\n                                                <p className=\"error-gender error-message\"></p>\r\n                                            </div>\r\n\r\n                                            <MDBInput label=\"Generation\" type=\"number\" size=\"md\" value={this.state.generation} onChange={this.changeHandler} name=\"generation\" style={{'WebkitAappearance': 'none'}}>\r\n                                                <span className=\"error-generation error-message\"></span>\r\n                                            </MDBInput>\r\n \r\n                                            <MDBInput label=\"Telp\" size=\"md\" value={this.state.telp} onChange={this.changeHandler} name=\"telp\">\r\n                                                <span className=\"error-telp error-message\"></span>\r\n                                            </MDBInput>\r\n                                            {/* <MDBInput label=\"Active\" size=\"md\" value={this.state.active} name=\"\" /> */}\r\n                                            <MDBBtn type=\"submit\" className=\"btn\" color=\"secondary\">Save</MDBBtn>\r\n                                        </div>\r\n                                    </MDBCol>\r\n                                    {/* <MDBCol size=\"6\">\r\n                                        <div className=\"form-group\">\r\n                                            <MDBInput label=\"Small input\" size=\"sm\" />\r\n                                        </div>\r\n                                    </MDBCol> */}\r\n                                </MDBRow>\r\n                            </form>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserForm\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport EditUserForm from './EditUserForm';\r\n\r\nexport class EditUser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditUserForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUser\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from 'mdbreact'\r\nimport axios from 'axios'\r\nimport Spinner from '../Spinner'\r\n\r\nexport class AddUserForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            email: '',\r\n            telp: '',\r\n            loading: false,\r\n            errors: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loading: true}, () => {\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://103.14.21.56:7443/api/v1/users/user/', \r\n                httpsAgent: agent,\r\n                data: {\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    confirm_password: this.state.confirm_password,\r\n                    email: this.state.email,\r\n                    telp: this.state.telp,\r\n                }\r\n            })\r\n            .then(response => {\r\n                this.setState({redirect: true, loading: false});\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response)\r\n                this.setState({errors: error.response.data, loading: false})\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect === true) {\r\n            return(<Redirect to=\"/home\" />)\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"} style={{ height: 'calc(100vh - 60px)' }}>\r\n                <MDBCol style={{ padding: '0', height: '100%' }} >\r\n                    <MDBCard style={{ width: '100%', height: '100%' }}>\r\n                        <MDBCardBody>\r\n                            <MDBCardTitle className=\"teal-text\">Add User</MDBCardTitle>\r\n                            <form method=\"POST\" action=\"\" onSubmit={this.submitHandler}>\r\n                                <MDBInput label=\"Username\" size=\"md\" value={this.state.username} onChange={this.changeHandler} name=\"username\" autoComplete=\"off\" className={this.state.errors.username ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-username error-message\">{ this.state.errors.username ? this.state.errors.username[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput type=\"password\" label=\"Password\" size=\"md\" value={this.state.password} onChange={this.changeHandler} name=\"password\" autoComplete=\"off\" className={this.state.errors.password ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-password error-message\">{ this.state.errors.password ? this.state.errors.password[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput type=\"password\" label=\"Confirm Password\" size=\"md\" value={this.state.confirm_password} onChange={this.changeHandler} name=\"confirm_password\" autoComplete=\"off\"  className={this.state.errors.confirm_password ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-confirm_password error-message\">{ this.state.errors.confirm_password ? this.state.errors.confirm_password[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput label=\"Email\" size=\"md\" value={this.state.email} onChange={this.changeHandler} name=\"email\" autoComplete=\"off\" className={this.state.errors.email ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-email error-message\">{ this.state.errors.email ? this.state.errors.email[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput label=\"Telp\" size=\"md\" value={this.state.telp} onChange={this.changeHandler} name=\"telp\" autoComplete=\"off\" className={this.state.errors.telp ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-telp error-message\">{ this.state.errors.telp ? this.state.errors.telp[0] : '' }</span>\r\n                                </MDBInput>\r\n                                {this.state.loading === true? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.4rem 2.12rem' }}><Spinner /></MDBBtn> : <MDBBtn type=\"submit\" className=\"btn\" color=\"secondary\">Submit</MDBBtn>}\r\n                            </form>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddUserForm from './AddUserForm'\r\n\r\nexport class AddUser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        // console.log(params)\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.myPropsToggle)\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle}/>\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.props.location.state.myPropsToggle} />\r\n                <AddUserForm myPropsToggle={this.state.myPropsToggle}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUser\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Pagination from \"react-js-pagination\";\r\nimport Spinner from '../Spinner';\r\n\r\n\r\nexport class TablePromotion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n    }\r\n\r\n    async getData(pageNum) {\r\n\r\n        await this.setState({ loading: true }, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            let offset = (pageNum - 1) * 10;\r\n\r\n            axios.get('https://103.14.21.56:7443/api/v1/promotions/promotion/' + '?limit=10&offset=' + offset, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n            })\r\n                .then(response => {\r\n                    console.log(response)\r\n                    this.setState({\r\n                        loading: false,\r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        })\r\n\r\n    }\r\n\r\n    deletePromo = async (id) => {\r\n        if (window.confirm('Are you sure want to delete this promo?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/promotions/promotion/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                .then(response => {\r\n                    console.log(response)\r\n                    this.getData(this.state.activePage)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);\r\n    }\r\n\r\n    render() {\r\n        let total = this.state.totalData;\r\n        let no = (this.state.activePage - 1) * 10 + 1;\r\n\r\n        const dataPromo = this.state.data.map((promo, value) => {\r\n            return (\r\n                <tr key={promo.id_promotion}>\r\n                    <td className=\"text-center\">{no++}</td>\r\n                    <td>{promo.id_promotion}</td>\r\n                    <td>{promo.promotion_title}</td>\r\n                    <td>{promo.description}</td>\r\n                    <td><img src={promo.url_banner} alt=\"\" style={{ width: '60px' }} /></td>\r\n                    <td>{promo.created_at}</td>\r\n                    <td>{promo.expired_date}</td>\r\n                    <td>{promo.expired_text}</td>\r\n                    <td>\r\n                        <Link to={{\r\n                            pathname: \"/promotion/edit-promotion/\" + promo.id_promotion,\r\n                            state: {\r\n                                myPropsToggle: this.props.myPropsToggle\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-purple\" style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-edit\"></i> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.deletePromo.bind(this, promo.id_promotion)} style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-trash-alt\"></i> Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-responsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n                    <Link to={{\r\n                        pathname: \"/promotion/add-promotion/\",\r\n                        state: {\r\n                            myPropsToggle: this.props.myPropsToggle\r\n                        }\r\n                    }}>\r\n                        <button type=\"button\" className=\"btn btn-success\"><i className=\"fa fa-plus-circle\"></i> Add Promotion</button>\r\n                    </Link>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>No</th>\r\n                                <th>ID</th>\r\n                                <th>Title</th>\r\n                                <th>Description</th>\r\n                                <th>Image</th>\r\n                                <th>Created</th>\r\n                                <th>Expired</th>\r\n                                <th>Expired Text</th>\r\n                                <th colSpan=\"2\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {this.state.loading ? <tr><td colSpan=\"10\" className=\"text-center\"><Spinner /></td></tr> : dataPromo}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n                <nav style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TablePromotion\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TablePromotion from './TablePromotion';\r\n\r\n\r\nexport class DataPromotion extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{ minHeight: 'calc(100vh - 90px)' }}>\r\n                        <MDBCardBody>\r\n                            <TablePromotion myPropsToggle={this.props.myPropsToggle}/>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataPromotion\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport DataPromotion from './DataPromotion';\r\n\r\nexport class Promotion extends Component {\r\n    state = {\r\n        myToggle: false\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataPromotion myPropsToggle={ this.state.myToggle } />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Promotion\r\n","import React, { Component } from 'react';\r\nimport { MDBInput, MDBCol } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class AddPromotionForm extends Component {\r\n    state = {\r\n        promotion_title: '',\r\n        description: '',\r\n        expired_date: '',\r\n        url_banner: '',\r\n        errors: [],\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value }, () => {console.log(this.state.expired_date)})\r\n    }\r\n\r\n    fileHandler = (e) => {\r\n        this.setState({ \r\n            url_banner: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault() \r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let expired = this.state.expired_date + ' 00:00:00+0700';\r\n\r\n        let form = new FormData();\r\n        form.append('promotion_title', this.state.promotion_title);\r\n        form.append('description', this.state.description);\r\n        form.append('expired_date', expired);\r\n        form.append('url_banner', this.state.url_banner);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://103.14.21.56:7443/api/v1/promotions/promotion/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/promotion\" />);\r\n        }\r\n\r\n        console.log(this.props.myPropsToggle)\r\n\r\n        let choose_file = this.state.url_banner === '' ? \"Choose File\" : this.state.url_banner.name\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\": \"main\"} style={{height: 'calc(100vh - 60px)' }}>\r\n                <div className=\"card\" style={{ height: '100%' }}>\r\n                    <div className=\"card-body\" style={{ height: '100%' }}>\r\n                        <MDBCol size=\"6\">\r\n                            <p className=\"card-title teal-text\">Add Promotion</p>\r\n\r\n                            <form action=\"\" method=\"POST\" onSubmit={this.submitHandler} encType=\"multipart/form-data\">\r\n                                <div className=\"form-group\">\r\n\r\n                                    <MDBInput type=\"text\" label=\"Promotion Title\" size=\"md\" value={this.state.promotion_title} onChange={this.changeHandler} name=\"promotion_title\" autoComplete=\"off\" className={this.state.errors.promotion_title ? 'is-invalid' : ''}>\r\n                                        <span className=\"error-message\">{this.state.errors.promotion_title ? this.state.errors.promotion_title[0] : ''}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <MDBInput type=\"textarea\" label=\"Description\" size=\"md\" value={this.state.description} onChange={this.changeHandler} name=\"description\" autoComplete=\"off\" className={this.state.errors.description ? 'is-invalid' : ''}>\r\n                                        <span className=\"error-message\">{this.state.errors.description ? this.state.errors.description[0] : ''}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"form-md\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_banner\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    onChange={this.fileHandler} \r\n                                                    // value={this.state.url_banner}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {choose_file}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Choose image for promotion\r\n                                        </small>\r\n                                        <div className=\"error-message\">{ this.state.errors.url_banner ? this.state.errors.url_banner[0] : ''}</div>\r\n                                    </div>\r\n\r\n                                    <MDBInput type=\"date\" name=\"expired_date\" className={this.state.errors.expired_date ? 'is-invalid' : ''} value={this.state.expired_date} autoComplete=\"false\" spellCheck=\"false\" onChange={this.changeHandler}> \r\n                                        <small className=\"form-text text-muted\">\r\n                                            Select date that promotion will ends\r\n                                        </small>\r\n                                        <span className=\"error-message\">{this.state.errors.expired_date ? this.state.errors.expired_date[0] : ''}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-purple\">Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPromotionForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddPromotionForm from './AddPromotionForm'\r\n\r\nexport class AddPromotion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <AddPromotionForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPromotion\r\n","import React, { Component } from 'react';\r\nimport { MDBInput, MDBCard, MDBCardBody, MDBCardTitle, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\n\r\nexport class EditPromotionForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false,\r\n            created_at: '',\r\n            promotion_title: '',\r\n            description: '',\r\n            url_banner: '',\r\n            expired_date: new Date(),\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            axios.get('https://103.14.21.56:7443/api/v1/promotions/promotion/' + this.props.id, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    loading: false,\r\n                    created_at: response.data.created_at,\r\n                    promotion_title: response.data.promotion_title,\r\n                    description: response.data.description,\r\n                    url_banner: response.data.url_banner,\r\n                    expired_date: response.data.expired_date\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, \r\n        () => {console.log(this.state.expired_date)}\r\n        )\r\n    }\r\n\r\n    fileHandler = (e) => {\r\n        \r\n        this.setState({ \r\n            url_banner: e.target.files[0] \r\n        }, () => {\r\n            var reader = new FileReader();\r\n            reader.onload = function(f) {\r\n                let id_img = document.getElementById('url_preview_banner')\r\n                id_img.setAttribute('src', f.target.result);\r\n            }\r\n            reader.readAsDataURL(this.state.url_banner);\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('promotion_title', this.state.promotion_title);\r\n        form.append('description', this.state.description);\r\n        form.append('expired_date', this.state.expired_date);\r\n        form.append('url_banner', this.state.url_banner);\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url: 'https://103.14.21.56:7443/api/v1/promotions/promotion/' + this.props.id + '/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        console.log(this.state.expired_date)\r\n        \r\n        let choose_file = this.state.url_banner === '' ? \"Choose File\" : this.state.url_banner.name\r\n        let d = new Date(this.state.expired_date);\r\n        let date = (d.getDate() < 10 ) ? (\"0\" + d.getDate()) : d.getDate();\r\n        let month = (d.getMonth() < 10 ) ? (\"0\" + (d.getMonth() + 1)) : (d.getMonth() + 1);\r\n        let expired_date = d.getFullYear() + '-' + month + '-' + date;\r\n        console.log(d)\r\n        console.log(expired_date)\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\": \"main\"}>\r\n                <MDBCard>\r\n                    <MDBCardBody className=\"card-body col-6\">\r\n                        <MDBCardTitle className=\"teal-text\">Edit Promotion</MDBCardTitle>\r\n\r\n                        {this.state.loading ? <div style={{width: '100%', textAlign: 'center'}}><Spinner /></div> : <form onSubmit={this.handleSubmit} method=\"POST\">\r\n\r\n                            <MDBInput type=\"text\" name=\"promotion_title\" onChange={this.handleChange} label=\"Promotion Title\" value={this.state.promotion_title} className={this.state.errors.promotion_title ? 'is-invalid': ''}>\r\n                                { this.state.errors.promotion_title ? <span className=\"error-message\">{this.state.errors.promotion_title[0]}</span> : '' }\r\n                            </MDBInput>\r\n\r\n                            <MDBInput type=\"textarea\" name=\"description\" onChange={this.handleChange} label=\"Description\" value={this.state.description} className={this.state.errors.description ? 'is-invalid': ''}>\r\n                                { this.state.errors.description ? <span className=\"error-message\">{this.state.errors.description[0]}</span> : '' }\r\n                            </MDBInput>\r\n\r\n                            <div className=\"form-md\">\r\n                                <p>Image Banner</p>\r\n                                <img src={this.state.url_banner} id=\"url_preview_banner\" alt=\"\" style={{width: '100px', marginBottom: '1em'}}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-md\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"custom-file\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"url_banner\"\r\n                                            className=\"custom-file-input\"\r\n                                            id=\"inputGroupFile01\"\r\n                                            ref=\"upload\"\r\n                                            onChange={this.fileHandler} \r\n                                            className={this.state.errors.url_banner ? 'is-invalid': ''}\r\n                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                        />\r\n                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                            {choose_file}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                    Change image for promotion\r\n                                </small>\r\n                                <div className=\"error-message\">{ this.state.errors.url_banner ? this.state.errors.url_banner[0] : ''}</div>\r\n                            </div>\r\n\r\n                            <MDBInput type=\"date\" name=\"expired_date\" className={this.state.errors.expired_date ? 'is-invalid' : ''}  value={expired_date} autoComplete=\"false\" spellCheck=\"false\" onChange={this.handleChange} className={this.state.errors.expired_date ? 'is-invalid': ''}> \r\n                                <small className=\"form-text text-muted\">\r\n                                    Change date that promotion will ends\r\n                                </small>\r\n                                <span className=\"error-message\">{this.state.errors.expired_date ? this.state.errors.expired_date[0] : ''}</span>\r\n                            </MDBInput>\r\n\r\n                            <MDBBtn type=\"submit\" color=\"purple\">Submit</MDBBtn>\r\n\r\n                        </form>}\r\n                        \r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPromotionForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport EditPromotionForm from './EditPromotionForm'\r\n\r\nexport class EditPromotion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditPromotionForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPromotion\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\nimport { MDBIcon, MDBBtn } from 'mdbreact';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nexport class TableCareerCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    async getData(pageNum) {\r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            let offset = (pageNum - 1) * 10;\r\n            \r\n            this.setState({loading: true}, () => {\r\n                axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/' + '?limit=10&offset=' + offset, {\r\n                    httpsAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    this.setState({\r\n                        loading: false, \r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n            });\r\n        })\r\n    }\r\n\r\n    deleteCareerCategory = async (id, category) => {\r\n        if (window.confirm('Are you sure want to delete this category ' + category + '?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/jobs/career-category/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                .then(response => {\r\n                    this.getData(this.state.activePage)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);    \r\n    }\r\n\r\n    render() {\r\n        let no = (this.state.activePage - 1) * 10 + 1;\r\n        let total = this.state.totalData;\r\n\r\n        const category = this.state.data.map((cat) => {\r\n            return (\r\n                <tr key={cat.id_category}>\r\n                    <td className=\"text-center\">{no++}</td>\r\n                    <td>{cat.id_category}</td>\r\n                    <td>{cat.category}</td>\r\n                    <td className=\"text-center\"><img src={cat.url_image} alt=\"\" style={{width: '40px'}} /></td>\r\n                    <td width=\"12%\" className=\"text-center\">\r\n                        <Link to={{\r\n                            pathname: \"/business/career-category/edit/\" + cat.id_category,\r\n                            state: {\r\n                                id: cat.id_category,\r\n                                myPropsToggle: this.props.myPropsToggle\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-purple btn-sm\" style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"edit\" /> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td width=\"12%\" className=\"text-center\">\r\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={this.deleteCareerCategory.bind(this, cat.id_category, cat.category)} style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"trash\" /> Delete </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"table-responsive\">\r\n                <Link to={{\r\n                    pathname: \"/business/career-category/add\",\r\n                    state: {\r\n                        myPropsToggle: this.props.myPropsToggle,\r\n                        show: this.props.show\r\n                    }\r\n                }}>\r\n                    <MDBBtn color=\"success\"><i className=\"fa fa-plus-circle\"></i> Add Category</MDBBtn>\r\n                </Link>\r\n                <table className=\"table table-condensed\">\r\n                    <thead>\r\n                        <tr className=\"text-center\">\r\n                            <th>No</th>\r\n                            <th>ID Category</th>\r\n                            <th>Category</th>\r\n                            <th>Image</th>\r\n                            <th>Edit</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.loading ? <tr><td colSpan=\"46\" className=\"text-center\"><Spinner /></td></tr> : category}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <nav style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableCareerCategory\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableCareerCategory from './TableCareerCategory';\r\n\r\n\r\nexport class DataCareerCategory extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody>\r\n                            <TableCareerCategory myPropsToggle={this.props.myPropsToggle} />\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataCareerCategory\r\n","import React, { Component, Fragment } from 'react';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport SideNav from '../SideNav';\r\nimport DataCareerCategory from './DataCareerCategory';\r\n// import Footer from '../Footer';\r\n\r\nexport class CareerCategory extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myToggle: props.location.state !== undefined ? props.location.state.myPropsToggle : false\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataCareerCategory myPropsToggle={ this.state.myToggle } />\r\n                {/* <Footer /> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CareerCategory\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nexport class AddCareerCategoryForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            category: '',\r\n            url_image: '',\r\n            errors: [],\r\n            redirect: false\r\n        }\r\n       \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = (e) => {\r\n        this.setState({ \r\n            url_image: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('category', this.state.category);\r\n        form.append('url_image', this.state.url_image);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://103.14.21.56:7443/api/v1/jobs/career-category/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/career-category\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        let choose_file = this.state.url_image === '' ? \"Choose File\" : this.state.url_image.name\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow>\r\n                    <MDBCol>\r\n                        <MDBCard style={{height: 'calc(100vh - 95px)'}}>\r\n                            <MDBCardBody className=\"col-6\">\r\n                                <MDBCardTitle className=\"teal-text\">Add Career Category</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit}>\r\n\r\n                                    <MDBInput type=\"text\" name=\"category\" label=\"Category\" autoComplete=\"off\" onChange={this.handleChange} value={this.state.category} className={this.state.errors.category ? 'is-invalid' : ''}>\r\n                                        {this.state.errors.category ? <span className=\"error-message\">{this.state.errors.category[0]}</span> : ''}\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"form-md\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_banner\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    onChange={this.handleImage} \r\n                                                    className={this.state.errors.url_image ? 'is-invalid' : ''}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {choose_file}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Choose image for promotion\r\n                                        </small>\r\n                                        { this.state.errors.url_image ? <div className=\"error-message\">{ this.state.errors.url_image[0] }</div> : ''}\r\n                                    </div>\r\n\r\n                                    <MDBBtn type=\"submit\" color=\"purple\" style={{ marginTop: '2em' }}>Submit</MDBBtn>\r\n\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddCareerCategoryForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddCareerCategoryForm from './AddCareerCategoryForm'\r\n\r\nexport class AddCareerCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={(event) => this.handleToggle(event)} show={this.state.myPropsToggle} />\r\n                <AddCareerCategoryForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddCareerCategory\r\n","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nexport class EditCareerCategoryForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            category: '',\r\n            url_image: '',\r\n            redirect: false,\r\n            loading: false,\r\n            errors: [],\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('category', this.state.category);\r\n        form.append('url_image', this.state.url_image);\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url: 'https://103.14.21.56:7443/api/v1/jobs/career-category/' + this.props.id + '/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/' + this.props.id, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    loading: false,\r\n                    category: response.data.category,\r\n                    url_image: response.data.url_image,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                    <MDBCol>\r\n                        <MDBCard style={{ minHeight: '100%' }}>\r\n                            <MDBCardBody className=\"col-6\">\r\n                                <MDBCardTitle className=\"teal-text\">Edit Career Category</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={ this.handleSubmit }>\r\n\r\n                                    <MDBInput type=\"text\" name=\"category\" onChange={this.handleChange} label=\"Category\" autoComplete=\"off\">\r\n                                    {this.state.errors.category ? <span className=\"career-category\">{this.state.errors.category[0]}</span> : ''}\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"form-md\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_image\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    onChange={this.handleFile} \r\n                                                    className={this.state.errors.url_image ? 'is-invalid': ''}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {/* {choose_file} */}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Change image for career category\r\n                                        </small>\r\n                                        <div className=\"error-message\">{ this.state.errors.url_image ? this.state.errors.url_image[0] : ''}</div>\r\n                                    </div>\r\n\r\n                                    <MDBBtn type=\"submit\" color=\"purple\" style={{ marginTop: '2em' }}>Submit</MDBBtn>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCareerCategoryForm\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport EditCareerCategoryForm from './EditCareerCategoryForm';\r\n\r\nexport class EditCareerCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={(event) => this.handleToggle(event)} show={this.state.myPropsToggle} />\r\n                <EditCareerCategoryForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCareerCategory\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../Spinner';\r\nimport { MDBIcon, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\nexport class TableJobVacancy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    async getData(pageNum) {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let offset = (pageNum - 1) * 10;\r\n\r\n        await this.setState({ loading: true }, () => {\r\n            axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + '?limit=10&offset=' + offset, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n            })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    this.setState({\r\n                        loading: false,\r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    deleteJobVacancy = async (id, job) => {\r\n        if (window.confirm('Are you sure want to delete this job ' + job + '?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                    .then(response => {\r\n                        this.getData(this.state.activePage)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let total = this.state.totalData;\r\n        let no = 0;\r\n\r\n        const jobvacancy = this.state.data.map((job) => {\r\n            no = no + 1;\r\n\r\n            return (\r\n                <tr key={job.id_job}>\r\n                    <td>{no}</td>\r\n                    <td>{job.category_name}</td>\r\n                    <td>{job.company_name}</td>\r\n                    <td>{job.type_job}</td>\r\n                    <td>{job.function_job}</td>\r\n                    <td>{job.required_skill}</td>\r\n                    <td>{job.title_joblist}</td>\r\n                    <td>{job.username}</td>\r\n                    <td>{job.created_at}</td>\r\n                    <td>{job.expired_date}</td>\r\n                    <td className=\"text-center\">\r\n                        <Link to={{\r\n                            pathname: \"/business/job-vacancy/edit/\" + job.id_job,\r\n                            state: {\r\n                                myPropsToggle: this.props.myPropsToggle,\r\n                                id: job.id_job\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-purple\" title=\"Edit\" style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-edit\"></i> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" title=\"Delete\" onClick={this.deleteJobVacancy.bind(this, job.id_job, job.title_joblist)} style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-trash-alt\"></i> Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-responsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n                    <Link to={{\r\n                        pathname: \"/business/job-vacancy/add/\",\r\n                        state: {\r\n                            myPropsToggle: this.props.myPropsToggle\r\n                        }\r\n                    }}>\r\n                        <MDBBtn type=\"button\" color=\"success\"><MDBIcon icon=\"plus-circle\" size=\"md\" /> Add Job Vacancy</MDBBtn>\r\n                    </Link>\r\n                    <table className=\"table table-condensed\">\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>No</th>\r\n                                <th>Category</th>\r\n                                <th>Company</th>\r\n                                <th>Type Job</th>\r\n                                <th>Function Job</th>\r\n                                <th>Required Skill</th>\r\n                                <th>Title Job List</th>\r\n                                <th>User</th>\r\n                                <th>Created</th>\r\n                                <th>Expired</th>\r\n                                <th colSpan=\"2\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.loading ? <tr><td colSpan=\"12\" className=\"text-center\"><Spinner /></td></tr> : jobvacancy}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <nav style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableJobVacancy\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableJobVacancy from './TableJobVacancy';\r\n\r\n\r\nexport class DataJobVacancy extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody>\r\n                            <TableJobVacancy myPropsToggle={this.props.myPropsToggle} />\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataJobVacancy\r\n","import React, { Component, Fragment } from 'react';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport SideNav from '../SideNav';\r\nimport DataJobVacancy from './DataJobVacancy.jsx';\r\n// import Footer from '../Footer';\r\n\r\nexport class JobVacancy extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myToggle: props.location.state !== undefined ? this.props.location.state.myPropsToggle : false\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataJobVacancy myPropsToggle={ this.state.myToggle } />\r\n                {/* <Footer /> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobVacancy\r\n","import React from 'react';\r\n\r\nconst UserDropdown = ({user}) => {\r\n    return (\r\n        <option value={user.username}>{user.username}</option>\r\n    )\r\n}\r\n\r\nexport default UserDropdown","import React from 'react';\r\n\r\nconst CategoryDropdown = ({category}) => {\r\n    return (\r\n        <option value={category.id_category}>{category.category}</option>\r\n    )\r\n}\r\n\r\nexport default CategoryDropdown","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'; \r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport CategoryDropdown from \"./CategoryDropdown\";\r\nimport axios from 'axios';\r\n\r\nexport class AddJobVacancyForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            title_joblist: '',\r\n            company_name: '',\r\n            experience_job: '',\r\n            required_skill: '',\r\n            function_job: '',\r\n            type_job: '',\r\n            desc: '',\r\n            expired_date: '',\r\n            id_category: '',\r\n            image_job: '',\r\n            usernameDropdown: [],\r\n            categoryDropdown: [],\r\n            errors: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    getAllCategory = () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({categoryDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({usernameDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUser()\r\n        this.getAllCategory()\r\n    }\r\n\r\n    handleImage = (e) => {\r\n        this.setState({ \r\n            image_job: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let expired = this.state.expired_date + ' 23:59:00+0700';\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('username', this.state.username)\r\n        form.append('image_job', this.state.image_job)\r\n        form.append('title_joblist', this.state.title_joblist)\r\n        form.append('company_name', this.state.company_name)\r\n        form.append('function_job', this.state.function_job)\r\n        form.append('type_job', this.state.type_job)\r\n        form.append('experience_job', this.state.experience_job)\r\n        form.append('required_skill', this.state.required_skill)\r\n        form.append('desc', this.state.desc)\r\n        form.append('expired_date', expired)\r\n        form.append('id_category', this.state.id_category)\r\n\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://103.14.21.56:7443/api/v1/jobs/job-vacancy/',\r\n            httpAgent: agent,\r\n            headers: { \r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n            this.setState({errors: error.response.data})\r\n        })\r\n\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(this.state.errors)\r\n        let choose_file = this.state.image_job === '' ? \"Choose Image\" : this.state.image_job.name;\r\n\r\n        const user = this.state.usernameDropdown.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const category = this.state.categoryDropdown.map(cat => {\r\n            return <CategoryDropdown key={cat.id_category} category={cat} />\r\n        })\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/job-vacancy\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                    <MDBCol size=\"12\">\r\n                        <MDBCard style={{ minHeight: '100%' }}>\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle className=\"teal-text\">Add Job Vacancy</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n                                    <MDBRow>\r\n                                        <MDBCol size=\"6\">\r\n                                            <div className=\"form-group\">\r\n                                                <MDBInput type=\"text\" name=\"title_joblist\" label=\"Job Title\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.title_joblist ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.title_joblist ? <span className=\"error-message\">{this.state.errors.title_joblist[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"company_name\" label=\"Company Name\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.company_name ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.company_name ? <span className=\"error-message\">{this.state.errors.company_name[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"function_job\" label=\"Function Job\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.function_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.function_job ? <span className=\"error-message\">{this.state.errors.function_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"experience_job\" label=\"Experience Job\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.experience_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.experience_job ? <span className=\"error-message\">{this.state.errors.experience_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"required_skill\" label=\"Required Skill\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.required_skill ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.required_skill ? <span className=\"error-message\">{this.state.errors.required_skill[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"textarea\" name=\"desc\" label=\"Description\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.desc ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.desc ? <span className=\"error-message\">{this.state.errors.desc[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"date\" name=\"expired_date\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.expired_date ? 'is-invalid' : ''}>\r\n                                                    <small className=\"form-text text-muted\">Select date that job vacancy will ends </small>\r\n                                                    {this.state.errors.expired_date ? <span className=\"error-message\">{this.state.errors.expired_date[0]}</span> : ''}\r\n                                                </MDBInput>\r\n                \r\n\r\n                                            </div>\r\n                                        </MDBCol>\r\n\r\n                                        <MDBCol size=\"6\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"username\">User</label>\r\n                                                    <select className={this.state.errors.username ? 'form-control is-invalid' : 'form-control'} onChange={this.handleChange} name=\"username\" id=\"username\">\r\n                                                        <option value=\"\">Choose user</option>\r\n                                                        {user}\r\n                                                    </select>\r\n                                                    {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"type_job\">Job Type</label>\r\n                                                    <select className={this.state.errors.type_job ? 'form-control is-invalid' : 'form-control'} onChange={this.handleChange} name=\"type_job\" id=\"type_job\">\r\n                                                        <option value=\"\">Choose job type</option>\r\n                                                        <option value=\"Part Time\">Part Time</option>\r\n                                                        <option value=\"Full Time\">Full Time</option>\r\n                                                    </select>\r\n                                                    {this.state.errors.type_job ? <span className=\"error-message\">{this.state.errors.type_job[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"id_category\">Category</label>\r\n                                                    <select className={this.state.errors.id_category ? 'form-control is-invalid' : 'form-control'} onChange={this.handleChange} name=\"id_category\" id=\"id_category\">\r\n                                                        <option value=\"\">Choose job category</option>\r\n                                                        {category}\r\n                                                    </select>\r\n                                                    {this.state.errors.id_category ? <span className=\"error-message\">{this.state.errors.id_category[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"from-group form-md\" style={{marginTop: '2em'}}>\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            name=\"image_job\"\r\n                                                            className=\"custom-file-input\"\r\n                                                            id=\"inputGroupFile01\"\r\n                                                            ref=\"upload\"\r\n                                                            accept=\"image/*\"\r\n                                                            onChange={this.handleImage} \r\n                                                            className={this.state.errors.image_job ? 'is-invalid' : ''}\r\n                                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                                        />\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            {choose_file}\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                                    Choose image for job vacancy\r\n                                                </small>\r\n                                                { this.state.errors.image_job ? <div className=\"error-message\">{ this.state.errors.image_job[0] }</div> : ''}\r\n                                            </div>\r\n\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBBtn style={{ marginTop: '2em' }} type=\"submit\" color=\"purple\">Submit</MDBBtn>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobVacancyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddJobVacancyForm from './AddJobVacancyForm'\r\n\r\nexport class AddJobVacancy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={(event) => this.handleToggle(event)} show={this.state.myPropsToggle} />\r\n                <AddJobVacancyForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobVacancy\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport CategoryDropdown from \"./CategoryDropdown\";\r\nimport axios from 'axios';\r\nimport Spinner from  '../Spinner';\r\n\r\nexport class EditJobVacancyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            title_joblist: '',\r\n            company_name: '',\r\n            experience_job: '',\r\n            required_skill: '',\r\n            function_job: '',\r\n            type_job: '',\r\n            desc: '',\r\n            expired_date: '',\r\n            id_category: '',\r\n            image_job: '',\r\n            usernameDropdown: [],\r\n            categoryDropdown: [],\r\n            errors: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    getAllCategory = () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({categoryDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({usernameDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getJobVacancy = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n        await axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + this.props.id + '/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(res => {\r\n            let expired_date = res.data.expired_date \r\n            let ex = expired_date.split(\" \")\r\n            console.log(ex)\r\n            this.setState({\r\n                username: res.data.username,\r\n                title_joblist: res.data.title_joblist,\r\n                company_name: res.data.company_name,\r\n                experience_job: res.data.experience_job,\r\n                required_skill: res.data.required_skill,\r\n                function_job: res.data.function_job,\r\n                type_job: res.data.type_job,\r\n                desc: res.data.desc,\r\n                expired_date: ex[0],\r\n                id_category: res.data.id_category,\r\n                image_job: res.data.image_job,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUser()\r\n        this.getAllCategory()\r\n        this.getJobVacancy()\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let expired = this.state.expired_date + ' 23:59:00+0700';\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('username', this.state.username)\r\n        form.append('image_job', this.state.image_job)\r\n        form.append('title_joblist', this.state.title_joblist)\r\n        form.append('company_name', this.state.company_name)\r\n        form.append('function_job', this.state.function_job)\r\n        form.append('type_job', this.state.type_job)\r\n        form.append('experience_job', this.state.experience_job)\r\n        form.append('required_skill', this.state.required_skill)\r\n        form.append('desc', this.state.desc)\r\n        form.append('expired_date', expired)\r\n        form.append('id_category', this.state.id_category)\r\n\r\n        await this.setState({loading: true}, () => {\r\n            axios({\r\n                method: 'PUT',\r\n                url: 'https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + this.props.id + '/',\r\n                httpAgent: agent,\r\n                headers: { \r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                data: form\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    redirect: true,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                this.setState({errors: error.response.data, loading: false})\r\n            })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.expired_date)\r\n        let choose_file = this.state.image_job === '' ? \"Choose Image\" : this.state.image_job.name;\r\n\r\n        const user = this.state.usernameDropdown.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const category = this.state.categoryDropdown.map(cat => {\r\n            return <CategoryDropdown key={cat.id_category} category={cat} />\r\n        })\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/job-vacancy\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                    <MDBCol size=\"12\">\r\n                        <MDBCard style={{ minHeight: '100%' }}>\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle className=\"teal-text\">Edit Job Vacancy</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n                                    <MDBRow>\r\n                                        <MDBCol size=\"6\">\r\n                                            <div className=\"form-group\">\r\n                                                <MDBInput type=\"text\" name=\"title_joblist\" label=\"Job Title\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.title_joblist} className={this.state.errors.title_joblist ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.title_joblist ? <span className=\"error-message\">{this.state.errors.title_joblist[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"company_name\" label=\"Company Name\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.company_name} className={this.state.errors.company_name ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.company_name ? <span className=\"error-message\">{this.state.errors.company_name[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"function_job\" label=\"Function Job\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.function_job} className={this.state.errors.function_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.function_job ? <span className=\"error-message\">{this.state.errors.function_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"experience_job\" label=\"Experience Job\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.experience_job} className={this.state.errors.experience_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.experience_job ? <span className=\"error-message\">{this.state.errors.experience_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"required_skill\" label=\"Required Skill\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.required_skill} className={this.state.errors.required_skill ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.required_skill ? <span className=\"error-message\">{this.state.errors.required_skill[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"textarea\" name=\"desc\" label=\"Description\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.desc} className={this.state.errors.desc ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.desc ? <span className=\"error-message\">{this.state.errors.desc[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"date\" name=\"expired_date\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.expired_date} className={this.state.errors.expired_date ? 'is-invalid' : ''}>\r\n                                                    <small className=\"form-text text-muted\">Select date that job vacancy will ends </small>\r\n                                                    {this.state.errors.expired_date ? <span className=\"error-message\">{this.state.errors.expired_date[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n\r\n                                            </div>\r\n                                        </MDBCol>\r\n\r\n                                        <MDBCol size=\"6\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"username\" className={this.state.errors.username ? 'error-message': ''}>User</label>\r\n                                                    <select className={this.state.errors.username ? 'form-control is-invalid' : 'form-control'} value={this.state.username} onChange={this.handleChange} name=\"username\" id=\"username\">\r\n                                                        {/* <option value=\"\">Choose user</option> */}\r\n                                                        {user}\r\n                                                    </select>\r\n                                                    {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"type_job\" className={this.state.errors.type_job ? 'error-message': ''}>Job Type</label>\r\n                                                    <select className={this.state.errors.type_job ? 'form-control is-invalid' : 'form-control'} value={this.state.type_job} onChange={this.handleChange} name=\"type_job\" id=\"type_job\">\r\n                                                        {/* <option value=\"\">Choose job type</option> */}\r\n                                                        <option value=\"Part Time\">Part Time</option>\r\n                                                        <option value=\"Full Time\">Full Time</option>\r\n                                                    </select>\r\n                                                    {this.state.errors.type_job ? <span className=\"error-message\">{this.state.errors.type_job[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"id_category\" className={this.state.errors.id_category ? 'error-message': ''}>Category</label>\r\n                                                    <select className={this.state.errors.id_category ? 'form-control is-invalid' : 'form-control'} value={this.state.id_category} onChange={this.handleChange} name=\"id_category\" id=\"id_category\">\r\n                                                        {/* <option value=\"\">Choose job category</option> */}\r\n                                                        {category}\r\n                                                    </select>\r\n                                                    {this.state.errors.id_category ? <span className=\"error-message\">{this.state.errors.id_category[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"from-group form-md\" style={{ marginTop: '2em' }}>\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            name=\"image_job\"\r\n                                                            className=\"custom-file-input\"\r\n                                                            id=\"inputGroupFile01\"\r\n                                                            ref=\"upload\"\r\n                                                            accept=\"image/*\"\r\n                                                            onChange={this.handleImage}\r\n                                                            className={this.state.errors.image_job ? 'is-invalid' : ''}\r\n                                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                                        />\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            {choose_file}\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <small className=\"form-text text-muted\">\r\n                                                    Change image for job vacancy\r\n                                                </small>\r\n                                                {this.state.errors.image_job ? <div className=\"error-message\">{this.state.errors.image_job[0]}</div> : ''}\r\n                                            </div>\r\n\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    {this.state.loading ? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.4rem 2.12rem' }}><Spinner/></MDBBtn> : <MDBBtn type=\"submit\" color=\"purple\">Save</MDBBtn>}\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobVacancyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport EditJobVacancyForm from './EditJobVacancyForm'\r\n\r\nexport class EditJobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditJobVacancyForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobApply\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nexport class TableJobApply extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    async getData(pageNum) {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let offset = (pageNum - 1) * 10;\r\n\r\n        this.setState({ loading: true }, () => {\r\n            axios.get('https://103.14.21.56:7443/api/v1/jobs/job-apply/' + '?limit=10&offset=' + offset, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n            })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    this.setState({\r\n                        loading: false,\r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    deleteJobApply = async (id) => {\r\n        if (window.confirm('Are you sure want to delete this apply job?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/jobs/job-apply/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                    .then(response => {\r\n                        this.getData(this.state.activePage)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let no = 0;\r\n        let total = this.state.totalData;\r\n\r\n        const jobApply = this.state.data.map((apply) => {\r\n            no = no + 1;\r\n            return (\r\n                <tr key={apply.trx_job}>\r\n                    <td className=\"text-center\">{no}</td>\r\n                    <td>{apply.username}</td>\r\n                    <td>{apply.trx_job}</td>\r\n                    <td>{apply.id_job}</td>\r\n                    <td className=\"text-center\">{apply.apply_date}</td>\r\n                    <td>{apply.attachment_code}</td>\r\n                    <td><a href={apply.url_attachment} target=\"_blank\">{apply.url_attachment}</a></td>\r\n                    <td className=\"text-center\">\r\n                        <Link to={{\r\n                            pathname: '/business/job-apply/edit/'+apply.trx_job,\r\n                            state: {\r\n                                myPropsToggle: this.props.myPropsToggle,\r\n                                id: apply.trx_job\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-purple\" style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"edit\" size=\"md\" /> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.deleteJobApply.bind(this, apply.trx_job)} style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"trash\" size=\"md\" /> Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-repsonsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n                    <Link to={{\r\n                        pathname: '/business/job-apply/add',\r\n                        state: {\r\n                            myPropsToggle: this.props.myPropsToggle,\r\n                        }\r\n                    }}>\r\n                        <MDBBtn type=\"button\" color=\"success\"><MDBIcon icon=\"plus-circle\" /> Add Job Apply</MDBBtn>\r\n                    </Link>\r\n                    <table className=\"table table-condensed\">\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>No</th>\r\n                                <th>Username</th>\r\n                                <th>Trx Job</th>\r\n                                <th>ID Job</th>\r\n                                <th>Apply</th>\r\n                                <th>Attach Code</th>\r\n                                <th>Image</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.loading ? <tr><td colSpan=\"9\" className=\"text-center\"><Spinner /></td></tr> : jobApply}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <nav style={{ width: '100%', display: 'flex', marginTop: '2em', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableJobApply\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableJobApply from './TableJobApply';\r\n\r\n\r\nexport class DataJobApply extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{ padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody style={{ minHeight: 'calc(100vh - 95px)'}}>\r\n                            <TableJobApply myPropsToggle={this.props.myPropsToggle} />\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataJobApply\r\n","import React, { Component, Fragment } from 'react';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport SideNav from '../SideNav';\r\nimport DataJobApply from './DataJobApply';\r\n\r\nexport class JobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myToggle: props.location.state !== undefined ? this.props.location.state.myPropsToggle : false\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataJobApply myPropsToggle={ this.state.myToggle } />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobApply\r\n","import React from 'react';\r\n\r\nconst JobDropdown = ({job}) => {\r\n    return <option value={job.id_job}>{job.title_joblist}</option>\r\n}\r\n\r\nexport default JobDropdown","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport UserDropdown from '../data_job_vacancy/UserDropdown';\r\nimport JobDropdown from './JobDropdown';\r\nimport axios from 'axios';\r\nimport Spinner from \"../Spinner\";\r\n\r\nexport class AddJobApplyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            body_messages: '',\r\n            id_job: '',\r\n            jobDropdown: [],\r\n            usernameDropdown: [],\r\n            errors: [],\r\n            loading: false,\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loading: true}, () => {\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://103.14.21.56:7443/api/v1/jobs/job-apply/',\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n                data: {\r\n                    username: this.state.username,\r\n                    id_job: this.state.id_job,\r\n                    body_messages: this.state.body_messages\r\n                }\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    redirect: true, \r\n                    loading: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                this.setState({errors: error.response.data, loading: false})\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({usernameDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getAllJob = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({jobDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUser();\r\n        this.getAllJob();\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.usernameDropdown.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const job = this.state.jobDropdown.map(job => {\r\n            return <JobDropdown key={job.id_job} job={job} />\r\n        })\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/job-apply\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                    <MDBCol size=\"12\">\r\n                        <MDBCard style={{ minHeight: '100%' }}>\r\n                            <MDBCardBody>\r\n                                <MDBCardTitle className=\"teal-text\">Add Job Apply</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit}>\r\n                                    <div className=\"form-group from-md\">\r\n                                        <select name=\"username\" id=\"username\" className=\"form-control\" onChange={this.handleChange}>\r\n                                            <option value=\"\">Choose User</option>\r\n                                            {user}\r\n                                        </select>\r\n                                        <small className=\"form-text text-muted\">Select user who apply this job </small>\r\n                                        {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                                    </div>\r\n                                    <div className=\"form-group from-md\">\r\n                                        <select name=\"id_job\" id=\"id_job\" className=\"form-control\" onChange={this.handleChange}>\r\n                                            <option value=\"\">Choose Job</option>\r\n                                            {job}\r\n                                        </select>\r\n                                        <small className=\"form-text text-muted\">Select job user</small>\r\n                                        {this.state.errors.id_job ? <span className=\"error-message\">{this.state.errors.id_job[0]}</span> : ''}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <MDBInput type=\"textarea\" name=\"body_messages\" label=\"Body Message\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.body_messages ? 'is-invalid' : ''}>\r\n                                            {this.state.errors.body_messages ? <span className=\"error-message\">{this.state.errors.body_messages[0]}</span> : ''}\r\n                                        </MDBInput>\r\n                                    </div>\r\n                                    <div className=\"from-group\">\r\n                                        {this.state.loading ? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.4rem 2.12rem' }}><Spinner/></MDBBtn> : <MDBBtn type=\"submit\" color=\"purple\">Submit</MDBBtn>}\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobApplyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddJobApplyForm from './AddJobApplyForm'\r\n\r\nexport class AddJobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <AddJobApplyForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobApply\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn, MDBIcon } from 'mdbreact'\r\nimport UserDropdown from '../data_job_vacancy/UserDropdown';\r\nimport JobDropdown from './JobDropdown';\r\nimport Axios from 'axios';\r\nimport Spinner from '../Spinner';\r\n\r\nexport class EditJobApplyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            id_job: '',\r\n            url_attachment: '',\r\n            redirect: false,\r\n            loading: false,\r\n            loadingJob: false,\r\n            loadingUser: false,\r\n            users: [],\r\n            jobs: [],\r\n            errors: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllJob()\r\n        this.getAllUser()  \r\n        this.getJobApply()  \r\n    }\r\n\r\n    getJobApply = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await Axios.get('https://103.14.21.56:7443/api/v1/jobs/job-apply/' + this.props.id, {\r\n            httpAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                username: res.data.username,\r\n                id_job: res.data.id_job,\r\n                url_attachment: res.data.url_attachment\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n        })\r\n    }\r\n\r\n    getAllJob = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loadingJob: true}, () => {\r\n            Axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/', {\r\n            httpAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    loadingJob: false,\r\n                    jobs: res.data,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loadingUser: true}, () => {\r\n            Axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n                httpAgent: agent,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    loadingUser: false,\r\n                    users: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name] :  e.target.value })\r\n    }\r\n\r\n    fileHandler = (e) => {\r\n        this.setState({ \r\n            url_attachment: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            let form = new FormData();\r\n            form.append('username', this.state.username)\r\n            form.append('id_job', this.state.id_job)\r\n            form.append('url_attachment', this.state.url_attachment)\r\n\r\n            Axios({\r\n                method: 'PUT',\r\n                url: 'https://103.14.21.56:7443/api/v1/jobs/job-apply/' + this.props.id + '/',\r\n                httpAgent: agent,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                data: form\r\n            })\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    loading: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n                this.setState({\r\n                    loading: false,\r\n                    errors: err.response.data\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let choose_file = this.state.url_attachment === '' ? \"Choose File\" : this.state.url_attachment.name\r\n\r\n        const users = this.state.users.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const jobs = this.state.jobs.map(job => {\r\n            return <JobDropdown key={job.id_job} job={job} />\r\n        })\r\n\r\n        if(this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: '/business/job-apply',\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\": \"main\"}>\r\n                <MDBCard style={{ minHeight: 'calc(100vh - 91px)' }}>\r\n                    <MDBCardBody className=\"col-6\">\r\n                        <MDBCardTitle className=\"teal-text\">Edit Job Apply</MDBCardTitle>\r\n                        <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n                            <div className=\"form-group form-md\">\r\n                                <select name=\"username\" id=\"username\" className={this.state.errors.username ? \"form-control is-invalid\" : \"form-control\"} onChange={this.handleChange} value={this.state.username}>\r\n                                    {this.state.loadingUser ? <option>Loading...</option> : users}\r\n                                </select>\r\n                                {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-md\">\r\n                                <select name=\"id_job\" id=\"id_job\" className={this.state.errors.id_job ? \"form-control is-invalid\" : \"form-control\"} onChange={this.handleChange} value={this.state.id_job}>\r\n                                    {this.state.loadingUser ? <option>Loading...</option> : jobs}\r\n                                </select>\r\n                                {this.state.errors.id_job ? <span className=\"error-message\">{this.state.errors.id_job[0]}</span> : ''}\r\n                            </div>\r\n\r\n                            <div className=\"form-md\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"custom-file\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"url_attachment\"\r\n                                            className=\"custom-file-input\"\r\n                                            id=\"inputGroupFile01\"\r\n                                            ref=\"upload\"\r\n                                            onChange={this.fileHandler} \r\n                                            className={this.state.errors.url_attachment ? 'is-invalid': ''}\r\n                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                        />\r\n                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                            {choose_file}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                    Choose pdf file\r\n                                </small>\r\n                                <div className=\"error-message\">{ this.state.errors.url_attachment ? this.state.errors.url_attachment[0] : ''}</div>\r\n                            </div>\r\n\r\n                            {this.state.loading ? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.5rem 2.12rem', marginTop: '2em' }}><Spinner /></MDBBtn> : <MDBBtn type=\"submit\" color=\"purple\" style={{marginTop: '2em'}}>Submit</MDBBtn>}\r\n                        </form>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobApplyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport EditJobApplyForm from './EditJobApplyForm'\r\n\r\nexport class EditJobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditJobApplyForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobApply\r\n","import React, { Component } from 'react';\r\n// import { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"purple-gradient\" style={{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0 }}>\r\n                <div className=\"text-center\" style={{  width: '100%', height: '100%', margin: 'auto', marginTop: '200px' }}>\r\n                    <h1 style={{ fontWeight: '700', fontSize: '77px', fontFamily: 'sans-serif', color: '#330d4a' }}>404 :(</h1>\r\n                    <h1 style={{ color: '#330d4a' }}>OOPS! Page Not Found</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default NotFound","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\n\r\nimport User from \"./components/data_user/User\";\r\nimport EditUser from \"./components/data_user/EditUser\";\r\nimport AddUser from \"./components/data_user/AddUser\";\r\n\r\nimport Promotion from \"./components/data_promotion/Promotion\";\r\nimport AddPromotion from \"./components/data_promotion/AddPromotion\";\r\nimport EditPromotion from \"./components/data_promotion/EditPromotion\";\r\n// import Career from \"./components/data_career/Career\";\r\n\r\nimport CareerCategory from \"./components/data_career_category/CareerCategory\";\r\nimport AddCareerCategory from \"./components/data_career_category/AddCareerCategory\";\r\nimport EditCareerCategory from \"./components/data_career_category/EditCareerCategory\";\r\n\r\nimport JobVacancy from \"./components/data_job_vacancy/JobVacancy\";\r\nimport AddJobVacancy from \"./components/data_job_vacancy/AddJobVacancy\";\r\nimport EditJobVacancy from \"./components/data_job_vacancy/EditJobVacancy\";\r\n\r\nimport JobApply from \"./components/data_job_apply/JobApply\";\r\nimport AddJobApply from \"./components/data_job_apply/AddJobApply\";\r\nimport EditJobApply from \"./components/data_job_apply/EditJobApply\";\r\n\r\nimport NotFound from './components/NotFound';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n\r\n          <Route exact path=\"/home\" component={User} />\r\n          <Route path=\"/home/add-user/\" component={AddUser} />\r\n          <Route path=\"/home/edit-user/:id\" component={EditUser} />\r\n          \r\n          <Route exact path=\"/promotion\" component={Promotion} />\r\n          <Route path=\"/promotion/add-promotion/\" component={AddPromotion} />\r\n          <Route path=\"/promotion/edit-promotion/:id\" component={EditPromotion} />\r\n\r\n          {/* <Route exact path=\"/business\" component={Career} /> */}\r\n          <Route exact path=\"/business/career-category\" component={CareerCategory} />\r\n          <Route exact path=\"/business/career-category/add\" component={AddCareerCategory} />\r\n          <Route exact path=\"/business/career-category/edit/:id\" component={EditCareerCategory} />\r\n\r\n          <Route exact path=\"/business/job-vacancy\" component={JobVacancy} />\r\n          <Route exact path=\"/business/job-vacancy/add\" component={AddJobVacancy} />\r\n          <Route exact path=\"/business/job-vacancy/edit/:id\" component={EditJobVacancy} />\r\n\r\n          <Route exact path=\"/business/job-apply\" component={JobApply} />\r\n          <Route exact path=\"/business/job-apply/add\" component={AddJobApply} />\r\n          <Route exact path=\"/business/job-apply/edit/:id\" component={EditJobApply} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\n\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// serviceWorker.unregister();"],"sourceRoot":""}