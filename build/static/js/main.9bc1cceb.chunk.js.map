{"version":3,"sources":["services/CekLogin.js","components/CustomNavbar.jsx","components/SideNav.jsx","components/data_user/ModalUser.jsx","components/Spinner.jsx","components/data_user/TableUser.jsx","components/Dashboard.jsx","components/Login.jsx","components/Home.jsx","components/data_user/DataUser.jsx","components/data_user/User.jsx","components/data_user/EditUserForm.jsx","components/data_user/EditUser.jsx","components/data_user/AddUserForm.jsx","components/data_user/AddUser.jsx","components/data_promotion/TablePromotion.jsx","components/data_promotion/DataPromotion.jsx","components/data_promotion/Promotion.jsx","components/data_promotion/AddPromotionForm.jsx","components/data_promotion/AddPromotion.jsx","components/data_promotion/EditPromotionForm.jsx","components/data_promotion/EditPromotion.jsx","components/data_career_category/TableCareerCategory.jsx","components/data_career_category/DataCareerCategory.jsx","components/data_career_category/CareerCategory.jsx","components/data_career_category/AddCareerCategoryForm.jsx","components/data_career_category/AddCareerCategory.jsx","components/data_career_category/EditCareerCategoryForm.jsx","components/data_career_category/EditCareerCategory.jsx","components/data_job_vacancy/TableJobVacancy.jsx","components/data_job_vacancy/DataJobVacancy.jsx","components/data_job_vacancy/JobVacancy.jsx","components/data_job_vacancy/UserDropdown.jsx","components/data_job_vacancy/CategoryDropdown.jsx","components/data_job_vacancy/AddJobVacancyForm.jsx","components/data_job_vacancy/AddJobVacancy.jsx","components/data_job_vacancy/EditJobVacancyForm.jsx","components/data_job_vacancy/EditJobVacancy.jsx","components/data_job_apply/TableJobApply.jsx","components/data_job_apply/DataJobApply.jsx","components/data_job_apply/JobApply.jsx","components/data_job_apply/JobDropdown.jsx","components/data_job_apply/AddJobApplyForm.jsx","components/data_job_apply/AddJobApply.jsx","components/data_job_apply/EditJobApplyForm.jsx","components/data_job_apply/EditJobApply.jsx","components/NotFound.jsx","App.jsx","index.js"],"names":["CekLogin","localStorage","getItem","to","pathname","state","notLogin","CustomNavbar","props","handlePropsToggleSidebar","val","myPropsToggle","hiddenSidebar","setState","toggle","toggleSidebar","console","log","toggleCollapse","isOpen","logout","clear","window","location","href","undefined","mobile","show","color","dark","expand","style","this","marginLeft","position","className","onClick","cursor","zIndex","id","navbar","right","marginRight","nav","caret","icon","Component","SideNav","business","businessProps","mobileToggle","businessManagement","activeClassName","bind","float","fontSize","marginTop","transition","transform","display","borderTop","bottom","width","ModalUser","modal","Spinner","role","TableUser","verifiedUser","id_profile","url_photo","nik","name","gender","birth_location","birthdate","address","postal_code","faculty","department","generation","a","is_verified","is_forum","is_marketplace","username","id_country","id_province","id_district","id_village","confirm","https","require","agent","Agent","rejectUnauthorized","form","FormData","append","axios","method","url","httpsAgent","headers","data","then","response","getData","activePage","catch","error","deleteUser","handlePageChange","pageNumber","totalUsers","curPage","loading","is_active","password","email","telp","text","confirm_password","offset","get","results","totalUser","count","no","total","tableTr","map","user","active","suspend","verified","profile","type","suspendUser","margin","id_prvince","key","minWidth","overflowY","modalClick","colSpan","justifyContent","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","innerClass","itemClass","linkClass","prevPageText","nextPageText","firstPageText","lastPageText","Dashboard","padding","minHeight","Login","submitHandler","event","preventDefault","post","httpAgent","res","status","is_superuser","setItem","access","redirect","fail","changeHandler","target","value","notAdmin","center","md","sm","src","alt","onSubmit","noValidate","autoComplete","label","required","invalidUsername","textAlign","DataUser","User","myToggle","handleToggle","params","EditUserForm","photo","document","querySelector","classList","remove","innerHTML","getElementsByClassName","Object","entries","addErrorToField","msg","changeRadio","nr","xl","size","rows","checked","EditUser","match","AddUserForm","e","errors","action","AddUser","TablePromotion","deletePromo","totalData","pageNum","dataPromo","promo","id_promotion","promotion_title","description","url_banner","created_at","expired_date","expired_text","DataPromotion","Promotion","AddPromotionForm","fileHandler","files","token","expired","choose_file","encType","ref","aria-describedby","htmlFor","spellCheck","AddPromotion","EditPromotionForm","handleChange","reader","FileReader","onload","f","getElementById","setAttribute","result","readAsDataURL","handleSubmit","Date","d","date","getDate","month","getMonth","getFullYear","marginBottom","EditPromotion","TableCareerCategory","deleteCareerCategory","category","cat","id_category","url_image","DataCareerCategory","CareerCategory","AddCareerCategoryForm","handleImage","height","AddCareerCategory","EditCareerCategoryForm","handleFile","EditCareerCategory","TableJobVacancy","deleteJobVacancy","job","jobvacancy","id_job","category_name","company_name","type_job","function_job","required_skill","title_joblist","title","DataJobVacancy","JobVacancy","UserDropdown","CategoryDropdown","AddJobVacancyForm","getAllCategory","categoryDropdown","getAllUser","usernameDropdown","image_job","experience_job","desc","accept","AddJobVacancy","EditJobVacancyForm","getJobVacancy","ex","split","EditJobApply","TableJobApply","deleteJobApply","jobApply","apply","trx_job","apply_date","attachment_code","url_attachment","DataJobApply","JobApply","JobDropdown","AddJobApplyForm","getAllJob","jobDropdown","AddJobApply","EditJobApplyForm","getJobApply","Axios","err","loadingJob","jobs","loadingUser","users","NotFound","top","left","fontWeight","fontFamily","App","exact","path","component","EditJobVacancy","ReactDOM","render"],"mappings":"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","file":"static/js/main.9bc1cceb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport function CekLogin() {\r\n    if(localStorage.getItem('token')) {\r\n        return <Redirect to={{\r\n            pathname: '/',\r\n            state: {\r\n                notLogin: true\r\n            }\r\n        }}/>\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  // MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBDropdown,  \r\n  MDBDropdownMenu,\r\n  MDBDropdownItem,\r\n  MDBDropdownToggle,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport \"./CustomNavbar.css\";\r\nimport { CekLogin } from \"../services/CekLogin.js\";\r\n\r\nclass CustomNavbar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isOpen: props.mobile !== undefined ? props.mobile : false,\r\n      toggle: props.show\r\n    };\r\n  }\r\n\r\n  handlePropsToggleSidebar = (val) => {\r\n    this.props.myPropsToggle(val)\r\n  }\r\n\r\n  hiddenSidebar =() => {\r\n    this.setState({\r\n      ...this.state,\r\n      toggle: !this.state.toggle\r\n    }, () => {\r\n      this.handlePropsToggleSidebar(this.state.toggle)\r\n    })\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    console.log('clicked toggle sidebar')\r\n    this.setState({\r\n      toggle: !this.state.toggle\r\n    }, () => {\r\n      this.handlePropsToggleSidebar(this.state.toggle)\r\n    })\r\n  }\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  logout = () => {\r\n    localStorage.clear();\r\n    // return <CekLogin />\r\n    window.location.href = \"http://103.14.21.56:49000/\";\r\n  }\r\n\r\n  render() {\r\n    if (!CekLogin()) {\r\n      return (<Redirect to=\"/\" />)\r\n    }\r\n\r\n    return (\r\n      <MDBNavbar color=\"primary-color\" dark expand=\"md\" style={this.state.toggle ? { marginLeft: '0', position: 'relative'} : { marginLeft: '270px', position: 'relative'}}>\r\n        <MDBNavbarBrand>\r\n          <i className=\"navbar-toggler-icon waves-effect waves-light\" onClick={this.toggleSidebar} style={{ cursor: 'pointer' }}></i>\r\n        </MDBNavbarBrand>\r\n        <span className={this.state.toggle ? \"mobile-burger-hidden\": \"mobile-burger-show\"} onClick={this.hiddenSidebar} style={{zIndex: '9999', position: 'fixed'}}>\r\n          <i className=\"fa\">&#x2715;</i>\r\n        </span>\r\n        <MDBNavbarToggler onClick={this.toggleSidebar} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem style={{marginRight: '1em'}}>\r\n              <MDBDropdown>\r\n                {/* <CekLogin isLogin={this.state.isLogin} /> */}\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" /> Administrator \r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"!#\" onClick={this.logout}>\r\n                    <MDBIcon icon=\"sign-out-alt\" /> Logout\r\n                  </MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomNavbar;\r\n","import React, { Component } from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { CekLogin } from \"../services/CekLogin.js\";\r\n\r\nclass SideNav extends Component {\r\n    state = {\r\n        business: this.props.businessProps,\r\n        mobileToggle: false\r\n    }\r\n\r\n    businessManagement = () => {\r\n        this.setState({ business: !this.state.business });\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.clear();\r\n        // return <CekLogin />\r\n        window.location.href = \"http://103.14.21.56:49000/\";\r\n    }\r\n    \r\n    render() {\r\n\r\n        if (!CekLogin()) {\r\n            return (<Redirect to=\"/\" />)\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"sidebar-fixed-inactive\" : \"sidebar-fixed\"}>\r\n                <a href=\"#!\" className=\"logo-wrapper waves-effect\">\r\n                    <h2>TRISAKTI DASHBOARD</h2>\r\n                </a>\r\n                {/* <div className=\"scrollable\"> */}\r\n                <MDBListGroup className=\"list-group-flush\">\r\n                    <NavLink to=\"/home\" activeClassName=\"activeClass\">\r\n                        <MDBListGroupItem>\r\n                            <MDBIcon icon=\"user\" className=\"mr-4\"/> User Management\r\n                        </MDBListGroupItem>\r\n                    </NavLink>  \r\n                    <NavLink to=\"/promotion\" activeClassName=\"activeClass\">\r\n                        <MDBListGroupItem>\r\n                            <MDBIcon icon=\"ticket-alt\" className=\"\" style={{ marginRight: '20px' }}/>\r\n                            Promo Management\r\n                        </MDBListGroupItem>\r\n                    </NavLink>\r\n                    {/* <NavL activeClassName=\"activeClass\"> */}\r\n                        <MDBListGroupItem onClick={this.businessManagement.bind(this)} style={{cursor: 'pointer'}}>\r\n                            <MDBIcon icon=\"business-time\" className=\"mr-3\"/>\r\n                            Business Management\r\n                            <MDBIcon icon=\"chevron-right\" style={this.state.business === true ? {float: 'right', fontSize: '12px', marginTop: '8px', transition: '0.3s', transform: 'rotate(90deg)'} : {float: 'right', fontSize: '12px', marginTop: '8px', transition: '0.3s',}} />\r\n                        </MDBListGroupItem>\r\n                    {/* </NavL> */}\r\n                    {/* DROPDOWN */}\r\n                    <MDBListGroup className=\"list-group-flush\" style={this.state.business === true ? {display: '', transition: '0.3s'} : {display: 'none', transition: '0.3s'} }>\r\n                    {/* <MDBListGroup className=\"list-group-flush\"> */}\r\n                        <NavLink to=\"/business/career-category\" activeClassName=\"activeClass\" style={{borderTop: '1px solid #eee'}}>\r\n                            <MDBListGroupItem>\r\n                                <MDBIcon style={{marginLeft: '35px'}} icon=\"business-time\" className=\"mr-2\"/> Career Category\r\n                            </MDBListGroupItem>\r\n                        </NavLink> \r\n                        <NavLink to=\"/business/job-vacancy\" activeClassName=\"activeClass\">\r\n                            <MDBListGroupItem>\r\n                                <MDBIcon style={{marginLeft: '35px'}} icon=\"business-time\" className=\"mr-2\"/> Job Vacancy\r\n                            </MDBListGroupItem>\r\n                        </NavLink>\r\n                        <NavLink to=\"/business/job-apply\" activeClassName=\"activeClass\">\r\n                            <MDBListGroupItem>\r\n                                <MDBIcon style={{marginLeft: '35px'}} icon=\"business-time\" className=\"mr-2\"/> Job Apply\r\n                            </MDBListGroupItem>\r\n                        </NavLink>\r\n                    </MDBListGroup>\r\n                    {/* END DROPDOWN */}\r\n                </MDBListGroup>\r\n                {/* </div> */}\r\n\r\n                <MDBListGroup className=\"mobile-logout\" style={{position: 'fixed', bottom: 0, width: '270px'}}>\r\n                    {/* <NavLink to=\"/logout\"> */}\r\n                        <MDBListGroupItem onClick={this.logout}>\r\n                            <MDBIcon icon=\"sign-out-alt\" className=\"mr-1\"/> Logout\r\n                        </MDBListGroupItem>\r\n                    {/* </NavLink>  */}\r\n                </MDBListGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideNav;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nclass ModalUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal isOpen={this.props.modal} >\r\n          <MDBModalHeader >MDBModal title</MDBModalHeader>\r\n          <MDBModalBody>\r\n            modal body\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n            <MDBBtn color=\"primary\">Save changes</MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ModalUser;","import React from \"react\";\r\n// import { MDBSpinner } from 'mdbreact'; // premium component\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <>\r\n        <div className=\"spinner-border text-success\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport ModalUser from './ModalUser';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from \"react-js-pagination\";\r\nimport Spinner from '../Spinner';\r\n\r\nexport class TableUser extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activePage: 1,\r\n      totalUsers: 1,\r\n      curPage: 1,\r\n      data: [],\r\n      modal: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  async suspendUser(id, username, is_active, password, email, telp, text) {\r\n    if (window.confirm('Are you sure want to ' + text + ' ' + username + '?')) {\r\n      const https = require('https');\r\n      const agent = new https.Agent({\r\n        rejectUnauthorized: false\r\n      });\r\n\r\n      await axios({\r\n        method: 'PUT',\r\n        url: 'https://103.14.21.56:7443/api/v1/users/user/' + id + '/',\r\n        httpsAgent: agent,\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n        data: {\r\n          // id: id,\r\n          is_active: is_active,\r\n          username: username,\r\n          password: password,\r\n          confirm_password: password,\r\n          email: email,\r\n          telp: telp\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        this.getData(this.state.activePage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  async getData(pageNumber) {\r\n    let offset = (pageNumber - 1) * 10;\r\n\r\n    const https = require('https');\r\n    const agent = new https.Agent({\r\n      rejectUnauthorized: false\r\n    });\r\n\r\n    await this.setState({ loading: true }, () => {\r\n      axios.get('https://103.14.21.56:7443/api/v1/users/user/' + '?limit=10&offset=' + offset, {\r\n        httpsAgent: agent,\r\n        headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n      })\r\n        .then(response => {\r\n          this.setState({\r\n            loading: false,\r\n            data: response.data.results,\r\n            totalUser: response.data.count\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            loading: false\r\n          })\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  verifiedUser = async (id_profile, url_photo, nik, name, gender, birth_location, birthdate, address, postal_code, faculty, department, generation, is_verified=false, is_forum=false, is_marketplace=false, username, id_country, id_province, id_district, id_village) => {\r\n    if (window.confirm('Are you sure want to make this ' + username + ' verified?')) {\r\n      const https = require('https');\r\n      const agent = new https.Agent({\r\n        rejectUnauthorized: false\r\n      });\r\n\r\n      let form = new FormData();\r\n      form.append('id_profile', id_profile)\r\n      form.append('url_photo', '')\r\n      form.append('nik', nik)\r\n      form.append('name', name)\r\n      form.append('gender', gender)\r\n      form.append('birth_location', birth_location)\r\n      form.append('birthdate', birthdate)\r\n      form.append('address', address)\r\n      form.append('postal_code', postal_code)\r\n      form.append('faculty', faculty)\r\n      form.append('department', department)\r\n      form.append('generation', generation)\r\n      form.append('is_verified', is_verified)\r\n      form.append('is_forum', is_forum)\r\n      form.append('is_marketplace', is_marketplace)\r\n      form.append('username', username)\r\n      form.append('id_country', id_country)\r\n      form.append('id_province', id_province)\r\n      form.append('id_district', id_district)\r\n      form.append('id_village', id_village)\r\n\r\n      await axios({\r\n        method: 'PUT',\r\n        url: 'https://103.14.21.56:7443/api/v1/users/user-profile/' + id_profile + '/',\r\n        httpsAgent: agent,\r\n        headers: { \r\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        data: form\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        this.getData(this.state.activePage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteUser = async (id, username) => {\r\n    if (window.confirm('Are you sure want to delete ' + username + '?')) {\r\n      const https = require('https');\r\n      const agent = new https.Agent({\r\n        rejectUnauthorized: false\r\n      });\r\n\r\n      await axios({\r\n        method: 'DELETE',\r\n        url: 'https://103.14.21.56:7443/api/v1/users/user/' + id + '/',\r\n        httpsAgent: agent,\r\n        headers: { \r\n          'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n        },\r\n        // data: form\r\n      })\r\n      .then(response => {\r\n        console.log(response)\r\n        this.getData(this.state.activePage);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response)\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({\r\n      activePage: pageNumber\r\n    }, () => {\r\n      this.getData(pageNumber);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(1);\r\n  }\r\n\r\n\r\n  render() {\r\n    let no = (this.state.activePage - 1) * 10 + 1;\r\n    let total = this.state.totalUser;\r\n\r\n    const tableTr = this.state.data.map((user) => {\r\n      let active, suspend, verified;\r\n      let profile = user.profile[0];\r\n\r\n      if (user.is_active) {\r\n        active = <MDBIcon icon=\"check-circle\" className=\"green-text\" />;\r\n        suspend = <button type=\"button\" className=\"btn btn-sm btn-elegant\" onClick={this.suspendUser.bind(this, user.id, user.username, false, user.password, user.email, user.telp, 'suspend')} style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-check\" /> Suspend</button>;\r\n      } else {\r\n        active = <MDBIcon icon=\"plus-circle\" className=\"red-text\" style={{ transform: 'rotate(45deg)' }} />;\r\n        suspend = <button type=\"button\" className=\"btn btn-sm\" onClick={this.suspendUser.bind(this, user.id, user.username, true, user.password, user.email, user.telp, 'unsuspend')} style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-slash\" /> Unsuspend</button>;\r\n      }\r\n\r\n      if ( profile.name !== null && profile.gender !== null && profile.birth_location !== null && profile.birthdate !== null && profile.address !== null && profile.postal_code !== null && profile.faculty !== null && profile.department !== null && profile.generation !== null && profile.id_country !== null && profile.id_prvince !== null && profile.id_district !== null && profile.id_village !== null && profile.is_verified == false) \r\n      {\r\n        verified = <button type=\"button\" \r\n                  className=\"btn btn-sm btn-success\" \r\n                  onClick={ this.verifiedUser.bind(this, profile.id_profile, profile.url_photo, profile.nik, profile.name, profile.gender, profile.birth_location, profile.birthdate, profile.address, profile.postal_code, profile.faculty, profile.department, profile.generation, true, profile.is_forum, profile.is_marketplace, profile.username, profile.id_country, profile.id_province, profile.id_district, profile.id_village) } \r\n                  style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-check\" /> Verified</button>;\r\n      } \r\n      else if( profile.name !== null && profile.gender !== null && profile.birth_location !== null && profile.birthdate !== null && profile.address !== null && profile.postal_code !== null && profile.faculty !== null && profile.department !== null && profile.generation !== null && profile.id_country !== null && profile.id_prvince !== null && profile.id_district !== null && profile.id_village !== null && profile.is_verified == true) \r\n      {\r\n        verified = <MDBIcon icon=\"check-circle\" className=\"green-text\" />;\r\n      } \r\n      else \r\n      {\r\n        verified = <button type=\"button\" className=\"btn btn-sm\" style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"user-slash\" /> Verified</button>;\r\n      }\r\n\r\n      return (\r\n        <tr key={user.id}>\r\n          <td className=\"text-center\">{no++}</td>\r\n          <td style={{minWidth: '120px'}}>{user.username}</td>\r\n          <td style={{minWidth: '180px'}}>{profile.name}</td>\r\n          <td>{user.email}</td>\r\n          <td style={{minWidth: '200px'}}>{profile.address}</td>\r\n          <td className=\"text-center\">{profile.gender}</td>\r\n          <td>{user.telp}</td>\r\n          <td className=\"text-center\">{active}</td>\r\n          <td className=\"text-center\">{verified}</td>\r\n          <td className=\"text-center\">{suspend}</td>\r\n          <td className=\"text-center\">\r\n            <Link to={{\r\n              pathname: \"/home/edit-user/\" + user.id,\r\n              state: {\r\n                myPropsToggle: this.props.myPropsToggle\r\n              }\r\n            }}>\r\n              <button type=\"button\" className=\"btn btn-purple btn-sm waves-effect waves-light\" style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"edit\" /> Edit</button>\r\n            </Link>\r\n          </td>\r\n          <td>\r\n            <MDBBtn type=\"button\" className=\"btn-sm\" color=\"danger\" onClick={this.deleteUser.bind(this, user.id, user.username)} style={{ margin: '0', width: 'max-content' }}><MDBIcon icon=\"trash\" /> Delete</MDBBtn>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"table-responsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n          <ModalUser modal={this.state.modal} modalClick={this.suspendUser} />\r\n          <Link to={{\r\n            pathname: \"/home/add-user/\",\r\n            state: {\r\n              myPropsToggle: this.props.myPropsToggle\r\n            }\r\n          }}>\r\n            <MDBBtn type=\"button\" color=\"success\"><MDBIcon icon=\"plus-circle\" /> Add User</MDBBtn>\r\n          </Link>\r\n          <table className=\"table table-hover\">\r\n            <thead>\r\n              <tr className=\"text-center\">\r\n                <th>No</th>\r\n                <th>Username</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Address</th>\r\n                <th>Gender</th>\r\n                <th>Telp</th>\r\n                <th>Active</th>\r\n                <th>Verified</th>\r\n                <th>Suspend</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.loading ? <tr><td colSpan=\"12\" className=\"text-center\"><Spinner /></td></tr> : tableTr}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n\r\n        <nav style={{ display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\r\n          <Pagination\r\n            activePage={this.state.activePage}\r\n            itemsCountPerPage={10}\r\n            totalItemsCount={total}\r\n            pageRangeDisplayed={5}\r\n            onChange={this.handlePageChange}\r\n            innerClass=\"pagination pagination-circle pg-red\"\r\n            itemClass=\"page-item\"\r\n            linkClass=\"page-link waves-effect waves-effect\"\r\n            prevPageText=\"&laquo;\"\r\n            nextPageText=\"&raquo;\"\r\n            firstPageText=\"First\"\r\n            lastPageText=\"Last\"\r\n          />\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableUser\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableUser from './data_user/TableUser';\r\nimport ModalUser from './data_user/ModalUser';\r\n\r\nexport class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody style={{ minHeight: 'calc(100vh - 90px)' }}>\r\n                            <TableUser myPropsToggle={this.props.myPropsToggle}/>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n                <ModalUser isOpen={this.toggle.bind(this)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from \"react\";\r\nimport { MDBInput, MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBAlert, MDBIcon } from \"mdbreact\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from './Spinner';\r\n// import AlertCustom from './alert/AlertCustom';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            loading: false,\r\n            redirect: false,\r\n            fail: false,\r\n            notAdmin: false,\r\n            notLogin: props.location.state !== undefined ? true : false\r\n        }\r\n    }\r\n\r\n    submitHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        this.setState({loading: true}, () => {\r\n            axios.post('https://103.14.21.56:7443/api/v1/token/', {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                httpAgent: agent,\r\n            })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.status === 200) {\r\n                    if (res.data.is_superuser === true) {\r\n                        localStorage.setItem('token', res.data.access);\r\n                        localStorage.setItem('username', res.data.username);\r\n                        this.setState({loading: false, redirect: true});\r\n                    } else {\r\n                        this.setState({fail: true, redirect: false, loading: false});\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading: false, \r\n                    fail: true\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/home\" />);\r\n        }\r\n\r\n        return (\r\n            <MDBContainer className=\"pb-4\">\r\n                {/* <AlertCustom show={true} text=\"Sucecss updated data\" /> */}\r\n                <MDBRow className=\"mb-4\" center>\r\n                    <MDBCol md=\"6\" sm=\"12\" className=\"mb-4 md-offset-3\">\r\n                        <MDBCard style={{marginTop: '100px'}}>\r\n                            <MDBCardBody>\r\n                                <center>\r\n                                    <img src=\"https://img.icons8.com/color/96/000000/lock.png\" alt=\"\" />\r\n                                    <h2><b>LOGIN</b></h2>\r\n                                    <div className=\"err-login\"></div>\r\n                                    { this.state.notLogin === true ? <div className=\"alert alert-info\" role=\"alert\">\r\n                                        You're session has expired, please login again.\r\n                                        </div> : '' }\r\n                                    { this.state.fail === true ? <MDBAlert color=\"danger\" >\r\n                                        <MDBIcon icon=\"exclamation-triangle\" /> Inccorect username or password given!\r\n                                        </MDBAlert> : ''}\r\n                                </center>\r\n                                <form method=\"POST\" className=\"needs-validation\" onSubmit={this.submitHandler} noValidate>\r\n                                    <MDBInput\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        autoComplete=\"off\"\r\n                                        id=\"materialFormRegisterNameEx\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.changeHandler}\r\n                                        label=\"Username\"\r\n                                        icon=\"user\"\r\n                                        required\r\n                                    >\r\n                                        <span className=\"help-block text-danger\"> {this.state.invalidUsername}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"valid-feedback\"></div>\r\n                                    <MDBInput\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        id=\"materialFormRegisterPasswordEx4\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.changeHandler}\r\n                                        icon=\"lock\"\r\n                                        autoComplete=\"off\"\r\n                                        required\r\n                                    />\r\n                                    {this.state.loading === true ? <div style={{textAlign: 'center'}}><Spinner /></div> : <MDBBtn className=\"btn btn-dark btn-block\" type=\"submit\">Login</MDBBtn>}\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component, Fragment } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { MDBContainer, MDBRow, MDBJumbotron } from \"mdbreact\";\r\nimport CustomNavbar from './CustomNavbar';\r\nimport SideNav from './SideNav';\r\nimport Dashboard from './Dashboard';\r\n// import Footer from './Footer';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    myToggle: false\r\n  }\r\n\r\n  handleToggle = (params) => {\r\n    this.setState({\r\n      myToggle: params\r\n    })\r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   document.title = \"Admin Trisakti | User Management\"\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <SideNav myPropsToggle={ this.state.myToggle } />\r\n        <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myToggle} />\r\n        <Dashboard myPropsToggle={ this.state.myToggle } />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableUser from './TableUser';\r\n\r\n\r\nexport class DataUser extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{ minHeight: 'calc(100vh - 90px)' }}>\r\n                        <MDBCardBody>\r\n                            <TableUser myPropsToggle={this.props.myPropsToggle}/>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataUser\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport DataUser from './DataUser';\r\n\r\nexport class User extends Component {\r\n    state = {\r\n        myToggle: false\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataUser myPropsToggle={ this.state.myToggle } />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react';\r\nimport { MDBInput, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport class EditUserForm extends Component {\r\n    // constructor(props) {\r\n    //     super(props)\r\n        state = {\r\n            id: '',\r\n            username: '',\r\n            id_profile: '',\r\n            nik: '',\r\n            name: '',\r\n            email: '',\r\n            address: '',\r\n            generation: 0,\r\n            gender: '',\r\n            telp: '',\r\n            active: '',\r\n            photo: '',\r\n            redirect: false,\r\n            error: false\r\n        }\r\n    // }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        document.querySelector(\".form-control\").classList.remove(\"invalid\");\r\n        console.log('clicked');\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url: 'https://103.14.21.56:7443/api/v1/users/user-profile/' + this.state.id_profile + '/',\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n            httpsAgent: agent,\r\n            data: {\r\n                id: this.state.id,\r\n                username: this.state.username,\r\n                id_profile: this.state.id_profile,\r\n                nik: this.state.nik,\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                address: this.state.address,\r\n                generation: this.state.generation,\r\n                gender: this.state.gender,\r\n                telp: this.state.telp,\r\n                is_active: this.state.active, \r\n                url_photo: null,\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            document.querySelector(\".error-message\").innerHTML = '';\r\n            document.querySelector(\".form-control\").classList.remove(\"invalid\");\r\n\r\n            this.setState({\r\n                redirect: true,\r\n                error: false\r\n            });\r\n        })\r\n        .catch(error => {\r\n            document.getElementsByClassName(\"error-message\").innerHTML = '';\r\n            document.querySelector(\".form-control\").classList.remove('.invalid');\r\n\r\n            this.setState({error: true})\r\n            Object.entries(error.response.data).map((key, val) => {\r\n                this.addErrorToField(key[0], key[1][0]);\r\n            });\r\n        });\r\n    }\r\n\r\n    addErrorToField = (name='', msg='') => {\r\n        if(this.state.error === true) {\r\n            var el = document.querySelector('[name=\"'+name+'\"]')\r\n            // el.classList.remove('invalid');\r\n            // el.classList.add('invalid');\r\n\r\n            document.querySelector(\".error-\" + name).innerHTML = msg;\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/' + this.props.id, {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n        })\r\n        .then(response => {\r\n            // console.log(response.data);\r\n            this.setState({\r\n                id: response.data.id,\r\n                id_profile: response.data.profile[0].id_profile,\r\n                nik: response.data.profile[0].nik === null ? '' : response.data.profile[0].nik,\r\n                username: response.data.username,\r\n                name: response.data.profile[0].name === null ? '' : response.data.profile[0].name,\r\n                email: response.data.email,\r\n                address: response.data.profile[0].address === null ? '' : response.data.profile[0].address,\r\n                gender: response.data.profile[0].gender === null ? 'L' : response.data.profile[0].gender,\r\n                generation: response.data.profile[0].generation === null ? 0 : response.data.profile[0].generation,\r\n                telp: response.data.telp,\r\n                active: response.data.is_active\r\n            });\r\n            // console.log(this.state)\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    changeRadio = nr => () => {\r\n        // console.log('jenis = ' +nr)\r\n        this.setState({\r\n            gender: nr,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.radio)\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/home\" />);\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{ padding: '0' }}>\r\n                    <MDBCard>\r\n                        <MDBCardBody>\r\n                            <MDBCardTitle className=\"teal-text\">Edit User</MDBCardTitle>\r\n                            <form method=\"POST\" onSubmit={this.submitHandler} noValidate>\r\n                                <MDBRow>\r\n                                    <MDBCol md=\"6\" sm=\"12\" xl=\"6\">\r\n                                        <div className=\"form-group\">\r\n                                            <MDBInput label=\"Username\" size=\"md\" value={this.state.username} onChange={this.changeHandler} name=\"username\">\r\n                                                <span className=\"error-username error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"NIK\" size=\"md\" value={this.state.nik} onChange={this.changeHandler} name=\"nik\" autoComplete=\"off\">\r\n                                                <span className=\"error-nik error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"Name\" size=\"md\" value={this.state.name} onChange={this.changeHandler} name=\"name\">\r\n                                                <span className=\"error-name error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"Email\" size=\"md\" value={this.state.email} onChange={this.changeHandler} name=\"email\">\r\n                                                <span className=\"error-email error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <MDBInput label=\"Address\" type=\"textarea\" size=\"md\" rows=\"4\" value={this.state.address} onChange={this.changeHandler} name=\"address\">\r\n                                                <span className=\"error-address error-message\"></span>\r\n                                            </MDBInput>\r\n\r\n                                            <div className=\"form-inline\">\r\n                                                <MDBInput onClick={this.changeRadio('L')} onChange={this.changeHandler} checked={this.state.gender === 'L' ? true : false} label=\"Laki-laki\" value=\"L\" type=\"radio\" id=\"radio1\" />\r\n                                                <MDBInput onClick={this.changeRadio('P')} onChange={this.changeHandler} checked={this.state.gender === 'P' ? true : false} label=\"Perempuan\" value=\"P\" type=\"radio\" id=\"radio2\" />\r\n                                                <p className=\"error-gender error-message\"></p>\r\n                                            </div>\r\n\r\n                                            <MDBInput label=\"Generation\" type=\"number\" size=\"md\" value={this.state.generation} onChange={this.changeHandler} name=\"generation\" style={{'WebkitAappearance': 'none'}}>\r\n                                                <span className=\"error-generation error-message\"></span>\r\n                                            </MDBInput>\r\n \r\n                                            <MDBInput label=\"Telp\" size=\"md\" value={this.state.telp} onChange={this.changeHandler} name=\"telp\">\r\n                                                <span className=\"error-telp error-message\"></span>\r\n                                            </MDBInput>\r\n                                            {/* <MDBInput label=\"Active\" size=\"md\" value={this.state.active} name=\"\" /> */}\r\n                                            <MDBBtn type=\"submit\" className=\"btn\" color=\"secondary\">Save</MDBBtn>\r\n                                        </div>\r\n                                    </MDBCol>\r\n                                    {/* <MDBCol size=\"6\">\r\n                                        <div className=\"form-group\">\r\n                                            <MDBInput label=\"Small input\" size=\"sm\" />\r\n                                        </div>\r\n                                    </MDBCol> */}\r\n                                </MDBRow>\r\n                            </form>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserForm\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport EditUserForm from './EditUserForm';\r\n\r\nexport class EditUser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditUserForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUser\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from 'mdbreact'\r\nimport axios from 'axios'\r\nimport Spinner from '../Spinner'\r\n\r\nexport class AddUserForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            email: '',\r\n            telp: '',\r\n            loading: false,\r\n            errors: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loading: true}, () => {\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://103.14.21.56:7443/api/v1/users/user/', \r\n                httpsAgent: agent,\r\n                data: {\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    confirm_password: this.state.confirm_password,\r\n                    email: this.state.email,\r\n                    telp: this.state.telp,\r\n                }\r\n            })\r\n            .then(response => {\r\n                this.setState({redirect: true, loading: false});\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response)\r\n                this.setState({errors: error.response.data, loading: false})\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect === true) {\r\n            return(<Redirect to=\"/home\" />)\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{ padding: '0'}} >\r\n                    <MDBCard>\r\n                        <MDBCardBody style={{ minHeight: 'calc(100vh - 60px)' }}>\r\n                            <MDBCardTitle className=\"teal-text\">Add User</MDBCardTitle>\r\n                            <form method=\"POST\" action=\"\" onSubmit={this.submitHandler}>\r\n                                <MDBInput label=\"Username\" size=\"md\" value={this.state.username} onChange={this.changeHandler} name=\"username\" autoComplete=\"off\" className={this.state.errors.username ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-username error-message\">{ this.state.errors.username ? this.state.errors.username[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput type=\"password\" label=\"Password\" size=\"md\" value={this.state.password} onChange={this.changeHandler} name=\"password\" autoComplete=\"off\" className={this.state.errors.password ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-password error-message\">{ this.state.errors.password ? this.state.errors.password[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput type=\"password\" label=\"Confirm Password\" size=\"md\" value={this.state.confirm_password} onChange={this.changeHandler} name=\"confirm_password\" autoComplete=\"off\"  className={this.state.errors.confirm_password ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-confirm_password error-message\">{ this.state.errors.confirm_password ? this.state.errors.confirm_password[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput label=\"Email\" size=\"md\" value={this.state.email} onChange={this.changeHandler} name=\"email\" autoComplete=\"off\" className={this.state.errors.email ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-email error-message\">{ this.state.errors.email ? this.state.errors.email[0] : '' }</span>\r\n                                </MDBInput>\r\n                                <MDBInput label=\"Telp\" size=\"md\" value={this.state.telp} onChange={this.changeHandler} name=\"telp\" autoComplete=\"off\" className={this.state.errors.telp ? 'is-invalid' : ''}>\r\n                                    <span className=\"error-telp error-message\">{ this.state.errors.telp ? this.state.errors.telp[0] : '' }</span>\r\n                                </MDBInput>\r\n                                {this.state.loading === true? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.4rem 2.12rem' }}><Spinner /></MDBBtn> : <MDBBtn type=\"submit\" className=\"btn\" color=\"secondary\">Submit</MDBBtn>}\r\n                            </form>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddUserForm from './AddUserForm'\r\n\r\nexport class AddUser extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        // console.log(params)\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.myPropsToggle)\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle}/>\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.props.location.state.myPropsToggle} />\r\n                <AddUserForm myPropsToggle={this.state.myPropsToggle}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUser\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Pagination from \"react-js-pagination\";\r\nimport Spinner from '../Spinner';\r\n\r\n\r\nexport class TablePromotion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n    }\r\n\r\n    async getData(pageNum) {\r\n\r\n        await this.setState({ loading: true }, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            let offset = (pageNum - 1) * 10;\r\n\r\n            axios.get('https://103.14.21.56:7443/api/v1/promotions/promotion/' + '?limit=10&offset=' + offset, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    loading: false,\r\n                    data: response.data.results,\r\n                    totalData: response.data.count\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    deletePromo = async (id) => {\r\n        if (window.confirm('Are you sure want to delete this promo?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/promotions/promotion/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                .then(response => {\r\n                    console.log(response)\r\n                    this.getData(this.state.activePage)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);\r\n    }\r\n\r\n    render() {\r\n        let total = this.state.totalData;\r\n        let no = (this.state.activePage - 1) * 10 + 1;\r\n\r\n        const dataPromo = this.state.data.map((promo, value) => {\r\n            return (\r\n                <tr key={promo.id_promotion}>\r\n                    <td className=\"text-center\">{no++}</td>\r\n                    <td>{promo.id_promotion}</td>\r\n                    <td>{promo.promotion_title}</td>\r\n                    <td>{promo.description}</td>\r\n                    <td><img src={promo.url_banner} alt=\"\" style={{ width: '60px' }} /></td>\r\n                    <td>{promo.created_at}</td>\r\n                    <td>{promo.expired_date}</td>\r\n                    <td>{promo.expired_text}</td>\r\n                    <td>\r\n                        <Link to={{\r\n                            pathname: \"/promotion/edit-promotion/\" + promo.id_promotion,\r\n                            state: {\r\n                                myPropsToggle: this.props.myPropsToggle\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-purple\" style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-edit\"></i> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td>\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.deletePromo.bind(this, promo.id_promotion)} style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-trash-alt\"></i> Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-responsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n                    <Link to={{\r\n                        pathname: \"/promotion/add-promotion/\",\r\n                        state: {\r\n                            myPropsToggle: this.props.myPropsToggle\r\n                        }\r\n                    }}>\r\n                        <button type=\"button\" className=\"btn btn-success\"><i className=\"fa fa-plus-circle\"></i> Add Promotion</button>\r\n                    </Link>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>No</th>\r\n                                <th>ID</th>\r\n                                <th>Title</th>\r\n                                <th>Description</th>\r\n                                <th>Image</th>\r\n                                <th>Created</th>\r\n                                <th>Expired</th>\r\n                                <th>Expired Text</th>\r\n                                <th colSpan=\"2\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {this.state.loading ? <tr><td colSpan=\"10\" className=\"text-center\"><Spinner /></td></tr> : dataPromo}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n                <nav style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TablePromotion\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TablePromotion from './TablePromotion';\r\n\r\n\r\nexport class DataPromotion extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{ minHeight: 'calc(100vh - 90px)' }}>\r\n                        <MDBCardBody>\r\n                            <TablePromotion myPropsToggle={this.props.myPropsToggle}/>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataPromotion\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport DataPromotion from './DataPromotion';\r\n\r\nexport class Promotion extends Component {\r\n    state = {\r\n        myToggle: false\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataPromotion myPropsToggle={ this.state.myToggle } />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Promotion\r\n","import React, { Component } from 'react';\r\nimport { MDBInput, MDBCol } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class AddPromotionForm extends Component {\r\n    state = {\r\n        promotion_title: '',\r\n        description: '',\r\n        expired_date: '',\r\n        url_banner: '',\r\n        errors: [],\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value }, () => {console.log(this.state.expired_date)})\r\n    }\r\n\r\n    fileHandler = (e) => {\r\n        this.setState({ \r\n            url_banner: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault() \r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let expired = this.state.expired_date + ' 00:00:00+0700';\r\n\r\n        let form = new FormData();\r\n        form.append('promotion_title', this.state.promotion_title);\r\n        form.append('description', this.state.description);\r\n        form.append('expired_date', expired);\r\n        form.append('url_banner', this.state.url_banner);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://103.14.21.56:7443/api/v1/promotions/promotion/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return(<Redirect to=\"/promotion\" />);\r\n        }\r\n\r\n        console.log(this.props.myPropsToggle)\r\n\r\n        let choose_file = this.state.url_banner === '' ? \"Choose File\" : this.state.url_banner.name\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\": \"main\"}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\" style={{minHeight: 'calc(100vh - 60px)' }}>\r\n                        <MDBCol sm=\"12\" md=\"6\" xl=\"6\">\r\n                            <p className=\"card-title teal-text\">Add Promotion</p>\r\n\r\n                            <form action=\"\" method=\"POST\" onSubmit={this.submitHandler} encType=\"multipart/form-data\">\r\n                                <div className=\"form-group\">\r\n\r\n                                    <MDBInput type=\"text\" label=\"Promotion Title\" size=\"md\" value={this.state.promotion_title} onChange={this.changeHandler} name=\"promotion_title\" autoComplete=\"off\" className={this.state.errors.promotion_title ? 'is-invalid' : ''}>\r\n                                        <span className=\"error-message\">{this.state.errors.promotion_title ? this.state.errors.promotion_title[0] : ''}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <MDBInput type=\"textarea\" label=\"Description\" size=\"md\" value={this.state.description} onChange={this.changeHandler} name=\"description\" autoComplete=\"off\" className={this.state.errors.description ? 'is-invalid' : ''}>\r\n                                        <span className=\"error-message\">{this.state.errors.description ? this.state.errors.description[0] : ''}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"form-md\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_banner\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    onChange={this.fileHandler} \r\n                                                    // value={this.state.url_banner}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {choose_file}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Choose image for promotion\r\n                                        </small>\r\n                                        <div className=\"error-message\">{ this.state.errors.url_banner ? this.state.errors.url_banner[0] : ''}</div>\r\n                                    </div>\r\n\r\n                                    <MDBInput type=\"date\" name=\"expired_date\" className={this.state.errors.expired_date ? 'is-invalid' : ''} value={this.state.expired_date} autoComplete=\"false\" spellCheck=\"false\" onChange={this.changeHandler}> \r\n                                        <small className=\"form-text text-muted\">\r\n                                            Select date that promotion will ends\r\n                                        </small>\r\n                                        <span className=\"error-message\">{this.state.errors.expired_date ? this.state.errors.expired_date[0] : ''}</span>\r\n                                    </MDBInput>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-purple\">Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </MDBCol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPromotionForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddPromotionForm from './AddPromotionForm'\r\n\r\nexport class AddPromotion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <AddPromotionForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPromotion\r\n","import React, { Component } from 'react';\r\nimport { MDBCol, MDBInput, MDBCard, MDBCardBody, MDBCardTitle, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\n\r\nexport class EditPromotionForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false,\r\n            created_at: '',\r\n            promotion_title: '',\r\n            description: '',\r\n            url_banner: '',\r\n            expired_date: new Date(),\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setState({ loading: true }, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            axios.get('https://103.14.21.56:7443/api/v1/promotions/promotion/' + this.props.id, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n            })\r\n                .then(response => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        created_at: response.data.created_at,\r\n                        promotion_title: response.data.promotion_title,\r\n                        description: response.data.description,\r\n                        url_banner: response.data.url_banner,\r\n                        expired_date: response.data.expired_date\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response)\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        },\r\n            () => { console.log(this.state.expired_date) }\r\n        )\r\n    }\r\n\r\n    fileHandler = (e) => {\r\n\r\n        this.setState({\r\n            url_banner: e.target.files[0]\r\n        }, () => {\r\n            var reader = new FileReader();\r\n            reader.onload = function (f) {\r\n                let id_img = document.getElementById('url_preview_banner')\r\n                id_img.setAttribute('src', f.target.result);\r\n            }\r\n            reader.readAsDataURL(this.state.url_banner);\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('promotion_title', this.state.promotion_title);\r\n        form.append('description', this.state.description);\r\n        form.append('expired_date', this.state.expired_date);\r\n        form.append('url_banner', this.state.url_banner);\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url: 'https://103.14.21.56:7443/api/v1/promotions/promotion/' + this.props.id + '/',\r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n            .then(response => {\r\n                this.setState({ redirect: true });\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n                this.setState({ errors: error.response.data })\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.expired_date)\r\n\r\n        let choose_file = this.state.url_banner === '' ? \"Choose File\" : this.state.url_banner.name\r\n        let d = new Date(this.state.expired_date);\r\n        let date = (d.getDate() < 10) ? (\"0\" + d.getDate()) : d.getDate();\r\n        let month = (d.getMonth() < 10) ? (\"0\" + (d.getMonth() + 1)) : (d.getMonth() + 1);\r\n        let expired_date = d.getFullYear() + '-' + month + '-' + date;\r\n        console.log(d)\r\n        console.log(expired_date)\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCard>\r\n                    <MDBCardBody className=\"card-body\">\r\n                        <MDBCol md=\"6\" xl=\"6\" sm=\"12\">\r\n                            <MDBCardTitle className=\"teal-text\">Edit Promotion</MDBCardTitle>\r\n\r\n                            {this.state.loading ? <div style={{ width: '100%', textAlign: 'center' }}><Spinner /></div> : <form onSubmit={this.handleSubmit} method=\"POST\">\r\n\r\n                                <MDBInput type=\"text\" name=\"promotion_title\" onChange={this.handleChange} label=\"Promotion Title\" value={this.state.promotion_title} className={this.state.errors.promotion_title ? 'is-invalid' : ''}>\r\n                                    {this.state.errors.promotion_title ? <span className=\"error-message\">{this.state.errors.promotion_title[0]}</span> : ''}\r\n                                </MDBInput>\r\n\r\n                                <MDBInput type=\"textarea\" name=\"description\" onChange={this.handleChange} label=\"Description\" value={this.state.description} className={this.state.errors.description ? 'is-invalid' : ''}>\r\n                                    {this.state.errors.description ? <span className=\"error-message\">{this.state.errors.description[0]}</span> : ''}\r\n                                </MDBInput>\r\n\r\n                                <div className=\"form-md\">\r\n                                    <p>Image Banner</p>\r\n                                    <img src={this.state.url_banner} id=\"url_preview_banner\" alt=\"\" style={{ width: '100px', marginBottom: '1em' }} />\r\n                                </div>\r\n\r\n                                <div className=\"form-md\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"custom-file\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                name=\"url_banner\"\r\n                                                className=\"custom-file-input\"\r\n                                                id=\"inputGroupFile01\"\r\n                                                ref=\"upload\"\r\n                                                onChange={this.fileHandler}\r\n                                                className={this.state.errors.url_banner ? 'is-invalid' : ''}\r\n                                                aria-describedby=\"inputGroupFileAddon01\"\r\n                                            />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                {choose_file}\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                        Change image for promotion\r\n                                </small>\r\n                                    <div className=\"error-message\">{this.state.errors.url_banner ? this.state.errors.url_banner[0] : ''}</div>\r\n                                </div>\r\n\r\n                                <MDBInput type=\"date\" name=\"expired_date\" className={this.state.errors.expired_date ? 'is-invalid' : ''} value={expired_date} autoComplete=\"false\" spellCheck=\"false\" onChange={this.handleChange} className={this.state.errors.expired_date ? 'is-invalid' : ''}>\r\n                                    <small className=\"form-text text-muted\">\r\n                                        Change date that promotion will ends\r\n                                </small>\r\n                                    <span className=\"error-message\">{this.state.errors.expired_date ? this.state.errors.expired_date[0] : ''}</span>\r\n                                </MDBInput>\r\n\r\n                                <MDBBtn type=\"submit\" color=\"purple\">Submit</MDBBtn>\r\n\r\n                            </form>}\r\n\r\n                        </MDBCol>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPromotionForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport EditPromotionForm from './EditPromotionForm'\r\n\r\nexport class EditPromotion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditPromotionForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPromotion\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\nimport { MDBIcon, MDBBtn } from 'mdbreact';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nexport class TableCareerCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n        console.log(props)\r\n    }\r\n\r\n    async getData(pageNum) {\r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            let offset = (pageNum - 1) * 10;\r\n            \r\n            this.setState({loading: true}, () => {\r\n                axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/' + '?limit=10&offset=' + offset, {\r\n                    httpsAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                .then(response => {\r\n                    this.setState({\r\n                        loading: false, \r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n            });\r\n        })\r\n    }\r\n\r\n    deleteCareerCategory = async (id, category) => {\r\n        if (window.confirm('Are you sure want to delete this category ' + category + '?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/jobs/career-category/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                .then(response => {\r\n                    this.getData(this.state.activePage)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);    \r\n    }\r\n\r\n    render() {\r\n        let no = (this.state.activePage - 1) * 10 + 1;\r\n        let total = this.state.totalData;\r\n\r\n        const category = this.state.data.map((cat) => {\r\n            return (\r\n                <tr key={cat.id_category}>\r\n                    <td className=\"text-center\">{no++}</td>\r\n                    <td>{cat.id_category}</td>\r\n                    <td>{cat.category}</td>\r\n                    <td className=\"text-center\"><img src={cat.url_image} alt=\"\" style={{width: '40px'}} /></td>\r\n                    <td width=\"12%\" className=\"text-center\">\r\n                        <Link to={{\r\n                            pathname: \"/business/career-category/edit/\" + cat.id_category,\r\n                            state: {\r\n                                id: cat.id_category,\r\n                                myPropsToggle: this.props.myPropsToggle\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-purple btn-sm\" style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"edit\" /> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td width=\"12%\" className=\"text-center\">\r\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={this.deleteCareerCategory.bind(this, cat.id_category, cat.category)} style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"trash\" /> Delete </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"table-responsive\">\r\n                <Link to={{\r\n                    pathname: \"/business/career-category/add\",\r\n                    state: {\r\n                        myPropsToggle: this.props.myPropsToggle,\r\n                        show: this.props.show\r\n                    }\r\n                }}>\r\n                    <MDBBtn color=\"success\"><i className=\"fa fa-plus-circle\"></i> Add Category</MDBBtn>\r\n                </Link>\r\n                <table className=\"table table-condensed\">\r\n                    <thead>\r\n                        <tr className=\"text-center\">\r\n                            <th>No</th>\r\n                            <th>ID Category</th>\r\n                            <th>Category</th>\r\n                            <th>Image</th>\r\n                            <th>Edit</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.loading ? <tr><td colSpan=\"46\" className=\"text-center\"><Spinner /></td></tr> : category}\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <nav style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableCareerCategory\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableCareerCategory from './TableCareerCategory';\r\n\r\n\r\nexport class DataCareerCategory extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody>\r\n                            <TableCareerCategory myPropsToggle={this.props.myPropsToggle} />\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataCareerCategory\r\n","import React, { Component, Fragment } from 'react';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport SideNav from '../SideNav';\r\nimport DataCareerCategory from './DataCareerCategory';\r\n// import Footer from '../Footer';\r\n\r\nexport class CareerCategory extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myToggle: props.location.state !== undefined ? props.location.state.myPropsToggle : false\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataCareerCategory myPropsToggle={ this.state.myToggle } />\r\n                {/* <Footer /> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CareerCategory\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nexport class AddCareerCategoryForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            category: '',\r\n            url_image: '',\r\n            errors: [],\r\n            redirect: false\r\n        }\r\n       \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleImage = (e) => {\r\n        this.setState({ \r\n            url_image: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('category', this.state.category);\r\n        form.append('url_image', this.state.url_image);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://103.14.21.56:7443/api/v1/jobs/career-category/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/career-category\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        let choose_file = this.state.url_image === '' ? \"Choose File\" : this.state.url_image.name\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow>\r\n                    <MDBCol>\r\n                        <MDBCard>\r\n                            <MDBCardBody className=\"col-md-6 col-sm-12\"  style={{height: 'calc(100vh - 95px)'}}>\r\n                                <MDBCardTitle className=\"teal-text\">Add Career Category</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit}>\r\n\r\n                                    <MDBInput type=\"text\" name=\"category\" label=\"Category\" autoComplete=\"off\" onChange={this.handleChange} value={this.state.category} className={this.state.errors.category ? 'is-invalid' : ''}>\r\n                                        {this.state.errors.category ? <span className=\"error-message\">{this.state.errors.category[0]}</span> : ''}\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"form-md\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_banner\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    onChange={this.handleImage} \r\n                                                    className={this.state.errors.url_image ? 'is-invalid' : ''}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {choose_file}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Choose image for promotion\r\n                                        </small>\r\n                                        { this.state.errors.url_image ? <div className=\"error-message\">{ this.state.errors.url_image[0] }</div> : ''}\r\n                                    </div>\r\n\r\n                                    <MDBBtn type=\"submit\" color=\"purple\" style={{ marginTop: '2em' }}>Submit</MDBBtn>\r\n\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddCareerCategoryForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddCareerCategoryForm from './AddCareerCategoryForm'\r\n\r\nexport class AddCareerCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={(event) => this.handleToggle(event)} show={this.state.myPropsToggle} />\r\n                <AddCareerCategoryForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddCareerCategory\r\n","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nexport class EditCareerCategoryForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            category: '',\r\n            url_image: '',\r\n            redirect: false,\r\n            loading: false,\r\n            errors: [],\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let token = localStorage.getItem('token');\r\n\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('category', this.state.category);\r\n        form.append('url_image', this.state.url_image);\r\n\r\n        axios({\r\n            method: 'PUT',\r\n            url: 'https://103.14.21.56:7443/api/v1/jobs/career-category/' + this.props.id + '/', \r\n            httpsAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token, \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({redirect: true});\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n            this.setState({errors: error.response.data})    \r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/' + this.props.id, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') },\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    loading: false,\r\n                    category: response.data.category,\r\n                    url_image: response.data.url_image,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow >\r\n                    <MDBCol>\r\n                        <MDBCard>\r\n                            <MDBCardBody className=\"col-md-6 col-sm-12\" style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                                <MDBCardTitle className=\"teal-text\">Edit Career Category</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={ this.handleSubmit }>\r\n\r\n                                    <MDBInput type=\"text\" name=\"category\" onChange={this.handleChange} label=\"Category\" autoComplete=\"off\">\r\n                                    {this.state.errors.category ? <span className=\"career-category\">{this.state.errors.category[0]}</span> : ''}\r\n                                    </MDBInput>\r\n\r\n                                    <div className=\"form-md\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_image\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    onChange={this.handleFile} \r\n                                                    className={this.state.errors.url_image ? 'is-invalid': ''}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {/* {choose_file} */}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Change image for career category\r\n                                        </small>\r\n                                        <div className=\"error-message\">{ this.state.errors.url_image ? this.state.errors.url_image[0] : ''}</div>\r\n                                    </div>\r\n\r\n                                    <MDBBtn type=\"submit\" color=\"purple\" style={{ marginTop: '2em' }}>Submit</MDBBtn>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCareerCategoryForm\r\n","import React, { Component, Fragment } from 'react';\r\nimport SideNav from '../SideNav';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport EditCareerCategoryForm from './EditCareerCategoryForm';\r\n\r\nexport class EditCareerCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={(event) => this.handleToggle(event)} show={this.state.myPropsToggle} />\r\n                <EditCareerCategoryForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditCareerCategory\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../Spinner';\r\nimport { MDBIcon, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\n\r\nexport class TableJobVacancy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    async getData(pageNum) {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let offset = (pageNum - 1) * 10;\r\n\r\n        await this.setState({ loading: true }, () => {\r\n            axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + '?limit=10&offset=' + offset, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n            })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    this.setState({\r\n                        loading: false,\r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    deleteJobVacancy = async (id, job) => {\r\n        if (window.confirm('Are you sure want to delete this job ' + job + '?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                    .then(response => {\r\n                        this.getData(this.state.activePage)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let total = this.state.totalData;\r\n        let no = 0;\r\n\r\n        const jobvacancy = this.state.data.map((job) => {\r\n            no = no + 1;\r\n\r\n            return (\r\n                <tr key={job.id_job}>\r\n                    <td>{no}</td>\r\n                    <td>{job.category_name}</td>\r\n                    <td>{job.company_name}</td>\r\n                    <td>{job.type_job}</td>\r\n                    <td>{job.function_job}</td>\r\n                    <td>{job.required_skill}</td>\r\n                    <td>{job.title_joblist}</td>\r\n                    <td>{job.username}</td>\r\n                    <td>{job.created_at}</td>\r\n                    <td>{job.expired_date}</td>\r\n                    <td className=\"text-center\">\r\n                        <Link to={{\r\n                            pathname: \"/business/job-vacancy/edit/\" + job.id_job,\r\n                            state: {\r\n                                myPropsToggle: this.props.myPropsToggle,\r\n                                id: job.id_job\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-purple\" title=\"Edit\" style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-edit\"></i> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" title=\"Delete\" onClick={this.deleteJobVacancy.bind(this, job.id_job, job.title_joblist)} style={{ width: 'max-content', margin: 0 }}><i className=\"fa fa-trash-alt\"></i> Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-responsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n                    <Link to={{\r\n                        pathname: \"/business/job-vacancy/add/\",\r\n                        state: {\r\n                            myPropsToggle: this.props.myPropsToggle\r\n                        }\r\n                    }}>\r\n                        <MDBBtn type=\"button\" color=\"success\"><MDBIcon icon=\"plus-circle\" size=\"md\" /> Add Job Vacancy</MDBBtn>\r\n                    </Link>\r\n                    <table className=\"table table-condensed\">\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>No</th>\r\n                                <th>Category</th>\r\n                                <th>Company</th>\r\n                                <th>Type Job</th>\r\n                                <th>Function Job</th>\r\n                                <th>Required Skill</th>\r\n                                <th>Title Job List</th>\r\n                                <th>User</th>\r\n                                <th>Created</th>\r\n                                <th>Expired</th>\r\n                                <th colSpan=\"2\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.loading ? <tr><td colSpan=\"12\" className=\"text-center\"><Spinner /></td></tr> : jobvacancy}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <nav style={{ width: '100%', display: 'flex', justifyContent: 'center', marginTop: '2em' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableJobVacancy\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableJobVacancy from './TableJobVacancy';\r\n\r\n\r\nexport class DataJobVacancy extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody>\r\n                            <TableJobVacancy myPropsToggle={this.props.myPropsToggle} />\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataJobVacancy\r\n","import React, { Component, Fragment } from 'react';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport SideNav from '../SideNav';\r\nimport DataJobVacancy from './DataJobVacancy.jsx';\r\n// import Footer from '../Footer';\r\n\r\nexport class JobVacancy extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myToggle: props.location.state !== undefined ? this.props.location.state.myPropsToggle : false\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataJobVacancy myPropsToggle={ this.state.myToggle } />\r\n                {/* <Footer /> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobVacancy\r\n","import React from 'react';\r\n\r\nconst UserDropdown = ({user}) => {\r\n    return (\r\n        <option value={user.username}>{user.username}</option>\r\n    )\r\n}\r\n\r\nexport default UserDropdown","import React from 'react';\r\n\r\nconst CategoryDropdown = ({category}) => {\r\n    return (\r\n        <option value={category.id_category}>{category.category}</option>\r\n    )\r\n}\r\n\r\nexport default CategoryDropdown","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'; \r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport CategoryDropdown from \"./CategoryDropdown\";\r\nimport axios from 'axios';\r\n\r\nexport class AddJobVacancyForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            title_joblist: '',\r\n            company_name: '',\r\n            experience_job: '',\r\n            required_skill: '',\r\n            function_job: '',\r\n            type_job: '',\r\n            desc: '',\r\n            expired_date: '',\r\n            id_category: '',\r\n            image_job: '',\r\n            usernameDropdown: [],\r\n            categoryDropdown: [],\r\n            errors: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    getAllCategory = () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({categoryDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({usernameDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUser()\r\n        this.getAllCategory()\r\n    }\r\n\r\n    handleImage = (e) => {\r\n        this.setState({ \r\n            image_job: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let expired = this.state.expired_date + ' 23:59:00+0700';\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('username', this.state.username)\r\n        form.append('image_job', this.state.image_job)\r\n        form.append('title_joblist', this.state.title_joblist)\r\n        form.append('company_name', this.state.company_name)\r\n        form.append('function_job', this.state.function_job)\r\n        form.append('type_job', this.state.type_job)\r\n        form.append('experience_job', this.state.experience_job)\r\n        form.append('required_skill', this.state.required_skill)\r\n        form.append('desc', this.state.desc)\r\n        form.append('expired_date', expired)\r\n        form.append('id_category', this.state.id_category)\r\n\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'https://103.14.21.56:7443/api/v1/jobs/job-vacancy/',\r\n            httpAgent: agent,\r\n            headers: { \r\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n            data: form\r\n        })\r\n        .then(response => {\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n            this.setState({errors: error.response.data})\r\n        })\r\n\r\n    }\r\n   \r\n\r\n    render() {\r\n        let choose_file = this.state.image_job === '' ? \"Choose Image\" : this.state.image_job.name;\r\n\r\n        const user = this.state.usernameDropdown.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const category = this.state.categoryDropdown.map(cat => {\r\n            return <CategoryDropdown key={cat.id_category} category={cat} />\r\n        })\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/job-vacancy\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow>\r\n                    <MDBCol size=\"12\">\r\n                        <MDBCard>\r\n                            <MDBCardBody style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                                <MDBCardTitle className=\"teal-text\">Add Job Vacancy</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n                                    <MDBRow>\r\n                                        <MDBCol md=\"6\" sm=\"12\">\r\n                                            <div className=\"form-group\">\r\n                                                <MDBInput type=\"text\" name=\"title_joblist\" label=\"Job Title\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.title_joblist ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.title_joblist ? <span className=\"error-message\">{this.state.errors.title_joblist[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"company_name\" label=\"Company Name\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.company_name ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.company_name ? <span className=\"error-message\">{this.state.errors.company_name[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"function_job\" label=\"Function Job\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.function_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.function_job ? <span className=\"error-message\">{this.state.errors.function_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"experience_job\" label=\"Experience Job\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.experience_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.experience_job ? <span className=\"error-message\">{this.state.errors.experience_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"required_skill\" label=\"Required Skill\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.required_skill ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.required_skill ? <span className=\"error-message\">{this.state.errors.required_skill[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"textarea\" name=\"desc\" label=\"Description\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.desc ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.desc ? <span className=\"error-message\">{this.state.errors.desc[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"date\" name=\"expired_date\" onChange={this.handleChange} autoComplete=\"off\" className={this.state.errors.expired_date ? 'is-invalid' : ''}>\r\n                                                    <small className=\"form-text text-muted\">Select date that job vacancy will ends </small>\r\n                                                    {this.state.errors.expired_date ? <span className=\"error-message\">{this.state.errors.expired_date[0]}</span> : ''}\r\n                                                </MDBInput>\r\n                \r\n\r\n                                            </div>\r\n                                        </MDBCol>\r\n\r\n                                        <MDBCol md=\"6\" sm=\"12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"username\">User</label>\r\n                                                    <select className={this.state.errors.username ? 'form-control is-invalid' : 'form-control'} onChange={this.handleChange} name=\"username\" id=\"username\">\r\n                                                        <option value=\"\">Choose user</option>\r\n                                                        {user}\r\n                                                    </select>\r\n                                                    {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"type_job\">Job Type</label>\r\n                                                    <select className={this.state.errors.type_job ? 'form-control is-invalid' : 'form-control'} onChange={this.handleChange} name=\"type_job\" id=\"type_job\">\r\n                                                        <option value=\"\">Choose job type</option>\r\n                                                        <option value=\"Part Time\">Part Time</option>\r\n                                                        <option value=\"Full Time\">Full Time</option>\r\n                                                    </select>\r\n                                                    {this.state.errors.type_job ? <span className=\"error-message\">{this.state.errors.type_job[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"id_category\">Category</label>\r\n                                                    <select className={this.state.errors.id_category ? 'form-control is-invalid' : 'form-control'} onChange={this.handleChange} name=\"id_category\" id=\"id_category\">\r\n                                                        <option value=\"\">Choose job category</option>\r\n                                                        {category}\r\n                                                    </select>\r\n                                                    {this.state.errors.id_category ? <span className=\"error-message\">{this.state.errors.id_category[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"from-group form-md\" style={{marginTop: '2em'}}>\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            name=\"image_job\"\r\n                                                            className=\"custom-file-input\"\r\n                                                            id=\"inputGroupFile01\"\r\n                                                            ref=\"upload\"\r\n                                                            accept=\"image/*\"\r\n                                                            onChange={this.handleImage} \r\n                                                            className={this.state.errors.image_job ? 'is-invalid' : ''}\r\n                                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                                        />\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            {choose_file}\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                                    Choose image for job vacancy\r\n                                                </small>\r\n                                                { this.state.errors.image_job ? <div className=\"error-message\">{ this.state.errors.image_job[0] }</div> : ''}\r\n                                            </div>\r\n\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    <MDBBtn style={{ marginTop: '2em' }} type=\"submit\" color=\"purple\">Submit</MDBBtn>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobVacancyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddJobVacancyForm from './AddJobVacancyForm'\r\n\r\nexport class AddJobVacancy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={(event) => this.handleToggle(event)} show={this.state.myPropsToggle} />\r\n                <AddJobVacancyForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobVacancy\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport UserDropdown from \"./UserDropdown\";\r\nimport CategoryDropdown from \"./CategoryDropdown\";\r\nimport axios from 'axios';\r\nimport Spinner from  '../Spinner';\r\n\r\nexport class EditJobVacancyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            title_joblist: '',\r\n            company_name: '',\r\n            experience_job: '',\r\n            required_skill: '',\r\n            function_job: '',\r\n            type_job: '',\r\n            desc: '',\r\n            expired_date: '',\r\n            id_category: '',\r\n            image_job: '',\r\n            usernameDropdown: [],\r\n            categoryDropdown: [],\r\n            errors: [],\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    getAllCategory = () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        axios.get('https://103.14.21.56:7443/api/v1/jobs/career-category/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({categoryDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({usernameDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getJobVacancy = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n        await axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + this.props.id + '/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(res => {\r\n            let expired_date = res.data.expired_date \r\n            let ex = expired_date.split(\" \")\r\n            console.log(ex)\r\n            this.setState({\r\n                username: res.data.username,\r\n                title_joblist: res.data.title_joblist,\r\n                company_name: res.data.company_name,\r\n                experience_job: res.data.experience_job,\r\n                required_skill: res.data.required_skill,\r\n                function_job: res.data.function_job,\r\n                type_job: res.data.type_job,\r\n                desc: res.data.desc,\r\n                expired_date: ex[0],\r\n                id_category: res.data.id_category,\r\n                image_job: res.data.image_job,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUser()\r\n        this.getAllCategory()\r\n        this.getJobVacancy()\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let expired = this.state.expired_date + ' 23:59:00+0700';\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let form = new FormData();\r\n        form.append('username', this.state.username)\r\n        form.append('image_job', this.state.image_job)\r\n        form.append('title_joblist', this.state.title_joblist)\r\n        form.append('company_name', this.state.company_name)\r\n        form.append('function_job', this.state.function_job)\r\n        form.append('type_job', this.state.type_job)\r\n        form.append('experience_job', this.state.experience_job)\r\n        form.append('required_skill', this.state.required_skill)\r\n        form.append('desc', this.state.desc)\r\n        form.append('expired_date', expired)\r\n        form.append('id_category', this.state.id_category)\r\n\r\n        await this.setState({loading: true}, () => {\r\n            axios({\r\n                method: 'PUT',\r\n                url: 'https://103.14.21.56:7443/api/v1/jobs/job-vacancy/' + this.props.id + '/',\r\n                httpAgent: agent,\r\n                headers: { \r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                data: form\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    redirect: true,\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                this.setState({errors: error.response.data, loading: false})\r\n            })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.expired_date)\r\n        let choose_file = this.state.image_job === '' ? \"Choose Image\" : this.state.image_job.name;\r\n\r\n        const user = this.state.usernameDropdown.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const category = this.state.categoryDropdown.map(cat => {\r\n            return <CategoryDropdown key={cat.id_category} category={cat} />\r\n        })\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/job-vacancy\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow>\r\n                    <MDBCol size=\"12\">\r\n                        <MDBCard>\r\n                            <MDBCardBody style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                                <MDBCardTitle className=\"teal-text\">Edit Job Vacancy</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n                                    <MDBRow>\r\n                                        <MDBCol md=\"6\" sm=\"12\" xl=\"6\">\r\n                                            <div className=\"form-group\">\r\n                                                <MDBInput type=\"text\" name=\"title_joblist\" label=\"Job Title\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.title_joblist} className={this.state.errors.title_joblist ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.title_joblist ? <span className=\"error-message\">{this.state.errors.title_joblist[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"company_name\" label=\"Company Name\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.company_name} className={this.state.errors.company_name ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.company_name ? <span className=\"error-message\">{this.state.errors.company_name[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"function_job\" label=\"Function Job\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.function_job} className={this.state.errors.function_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.function_job ? <span className=\"error-message\">{this.state.errors.function_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"experience_job\" label=\"Experience Job\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.experience_job} className={this.state.errors.experience_job ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.experience_job ? <span className=\"error-message\">{this.state.errors.experience_job[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"text\" name=\"required_skill\" label=\"Required Skill\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.required_skill} className={this.state.errors.required_skill ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.required_skill ? <span className=\"error-message\">{this.state.errors.required_skill[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"textarea\" name=\"desc\" label=\"Description\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.desc} className={this.state.errors.desc ? 'is-invalid' : ''}>\r\n                                                    {this.state.errors.desc ? <span className=\"error-message\">{this.state.errors.desc[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n                                                <MDBInput type=\"date\" name=\"expired_date\" onChange={this.handleChange} autoComplete=\"off\" value={this.state.expired_date} className={this.state.errors.expired_date ? 'is-invalid' : ''}>\r\n                                                    <small className=\"form-text text-muted\">Select date that job vacancy will ends </small>\r\n                                                    {this.state.errors.expired_date ? <span className=\"error-message\">{this.state.errors.expired_date[0]}</span> : ''}\r\n                                                </MDBInput>\r\n\r\n\r\n                                            </div>\r\n                                        </MDBCol>\r\n\r\n                                        <MDBCol md=\"6\" sm=\"12\" xl=\"6\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"username\" className={this.state.errors.username ? 'error-message': ''}>User</label>\r\n                                                    <select className={this.state.errors.username ? 'form-control is-invalid' : 'form-control'} value={this.state.username} onChange={this.handleChange} name=\"username\" id=\"username\">\r\n                                                        {/* <option value=\"\">Choose user</option> */}\r\n                                                        {user}\r\n                                                    </select>\r\n                                                    {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"type_job\" className={this.state.errors.type_job ? 'error-message': ''}>Job Type</label>\r\n                                                    <select className={this.state.errors.type_job ? 'form-control is-invalid' : 'form-control'} value={this.state.type_job} onChange={this.handleChange} name=\"type_job\" id=\"type_job\">\r\n                                                        {/* <option value=\"\">Choose job type</option> */}\r\n                                                        <option value=\"Part Time\">Part Time</option>\r\n                                                        <option value=\"Full Time\">Full Time</option>\r\n                                                    </select>\r\n                                                    {this.state.errors.type_job ? <span className=\"error-message\">{this.state.errors.type_job[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"form-md\">\r\n                                                    <label htmlFor=\"id_category\" className={this.state.errors.id_category ? 'error-message': ''}>Category</label>\r\n                                                    <select className={this.state.errors.id_category ? 'form-control is-invalid' : 'form-control'} value={this.state.id_category} onChange={this.handleChange} name=\"id_category\" id=\"id_category\">\r\n                                                        {/* <option value=\"\">Choose job category</option> */}\r\n                                                        {category}\r\n                                                    </select>\r\n                                                    {this.state.errors.id_category ? <span className=\"error-message\">{this.state.errors.id_category[0]}</span> : ''}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"from-group form-md\" style={{ marginTop: '2em' }}>\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            name=\"image_job\"\r\n                                                            className=\"custom-file-input\"\r\n                                                            id=\"inputGroupFile01\"\r\n                                                            ref=\"upload\"\r\n                                                            accept=\"image/*\"\r\n                                                            onChange={this.handleImage}\r\n                                                            className={this.state.errors.image_job ? 'is-invalid' : ''}\r\n                                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                                        />\r\n                                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            {choose_file}\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <small className=\"form-text text-muted\">\r\n                                                    Change image for job vacancy\r\n                                                </small>\r\n                                                {this.state.errors.image_job ? <div className=\"error-message\">{this.state.errors.image_job[0]}</div> : ''}\r\n                                            </div>\r\n\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n\r\n                                    {this.state.loading ? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.4rem 2.12rem' }}><Spinner/></MDBBtn> : <MDBBtn type=\"submit\" color=\"purple\">Save</MDBBtn>}\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobVacancyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport EditJobVacancyForm from './EditJobVacancyForm'\r\n\r\nexport class EditJobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditJobVacancyForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobApply\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nexport class TableJobApply extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loading: false,\r\n            activePage: 1,\r\n            totalData: 1,\r\n            curPage: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(1);\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        this.getData(pageNumber);\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({ activePage: pageNumber });\r\n    }\r\n\r\n    async getData(pageNum) {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        let offset = (pageNum - 1) * 10;\r\n\r\n        this.setState({ loading: true }, () => {\r\n            axios.get('https://103.14.21.56:7443/api/v1/jobs/job-apply/' + '?limit=10&offset=' + offset, {\r\n                httpsAgent: agent,\r\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n            })\r\n                .then(response => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        data: response.data.results,\r\n                        totalData: response.data.count\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    deleteJobApply = async (id) => {\r\n        if (window.confirm('Are you sure want to delete this apply job?')) {\r\n            await this.setState({ loading: true }, () => {\r\n                const https = require('https');\r\n                const agent = new https.Agent({\r\n                    rejectUnauthorized: false\r\n                });\r\n\r\n                axios({\r\n                    method: 'DELETE',\r\n                    url: 'https://103.14.21.56:7443/api/v1/jobs/job-apply/' + id + '/',\r\n                    httpAgent: agent,\r\n                    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n                })\r\n                    .then(response => {\r\n                        this.getData(this.state.activePage)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let no = 0;\r\n        let total = this.state.totalData;\r\n\r\n        const jobApply = this.state.data.map((apply) => {\r\n            no = no + 1;\r\n            return (\r\n                <tr key={apply.trx_job}>\r\n                    <td className=\"text-center\">{no}</td>\r\n                    <td>{apply.username}</td>\r\n                    <td>{apply.trx_job}</td>\r\n                    <td>{apply.id_job}</td>\r\n                    <td className=\"text-center\">{apply.apply_date}</td>\r\n                    <td>{apply.attachment_code}</td>\r\n                    <td><a href={apply.url_attachment} target=\"_blank\">{apply.url_attachment}</a></td>\r\n                    <td className=\"text-center\">\r\n                        <Link to={{\r\n                            pathname: '/business/job-apply/edit/'+apply.trx_job,\r\n                            state: {\r\n                                myPropsToggle: this.props.myPropsToggle,\r\n                                id: apply.trx_job\r\n                            }\r\n                        }}>\r\n                            <button type=\"button\" className=\"btn btn-sm btn-purple\" style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"edit\" size=\"md\" /> Edit</button>\r\n                        </Link>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.deleteJobApply.bind(this, apply.trx_job)} style={{ width: 'max-content', margin: 0 }}><MDBIcon icon=\"trash\" size=\"md\" /> Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"table-repsonsive\" style={{ width: '100%', overflowY: 'auto' }}>\r\n                    <Link to={{\r\n                        pathname: '/business/job-apply/add',\r\n                        state: {\r\n                            myPropsToggle: this.props.myPropsToggle,\r\n                        }\r\n                    }}>\r\n                        <MDBBtn type=\"button\" color=\"success\"><MDBIcon icon=\"plus-circle\" /> Add Job Apply</MDBBtn>\r\n                    </Link>\r\n                    <table className=\"table table-condensed\">\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>No</th>\r\n                                <th>Username</th>\r\n                                <th>Trx Job</th>\r\n                                <th>ID Job</th>\r\n                                <th>Apply</th>\r\n                                <th>Attach Code</th>\r\n                                <th>Image</th>\r\n                                <th>Edit</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.loading ? <tr><td colSpan=\"9\" className=\"text-center\"><Spinner /></td></tr> : jobApply}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <nav style={{ width: '100%', display: 'flex', marginTop: '2em', justifyContent: 'center' }}>\r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={total}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={this.handlePageChange}\r\n                        innerClass=\"pagination pagination-circle pg-red\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link waves-effect waves-effect\"\r\n                        prevPageText=\"&laquo;\"\r\n                        nextPageText=\"&raquo;\"\r\n                        firstPageText=\"First\"\r\n                        lastPageText=\"Last\"\r\n                    />\r\n                </nav>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableJobApply\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCol } from 'mdbreact';\r\nimport TableJobApply from './TableJobApply';\r\n\r\n\r\nexport class DataJobApply extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBCol style={{ padding: '0'}}>\r\n                    <MDBCard style={{width: '100%'}}>\r\n                        <MDBCardBody style={{ minHeight: 'calc(100vh - 95px)'}}>\r\n                            <TableJobApply myPropsToggle={this.props.myPropsToggle} />\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataJobApply\r\n","import React, { Component, Fragment } from 'react';\r\nimport CustomNavbar from '../CustomNavbar';\r\nimport SideNav from '../SideNav';\r\nimport DataJobApply from './DataJobApply';\r\n\r\nexport class JobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myToggle: props.location.state !== undefined ? this.props.location.state.myPropsToggle : false\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n          myToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={ this.state.myToggle } />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={ this.state.myToggle } />\r\n                <DataJobApply myPropsToggle={ this.state.myToggle } />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobApply\r\n","import React from 'react';\r\n\r\nconst JobDropdown = ({job}) => {\r\n    return <option value={job.id_job}>{job.title_joblist}</option>\r\n}\r\n\r\nexport default JobDropdown","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport UserDropdown from '../data_job_vacancy/UserDropdown';\r\nimport JobDropdown from './JobDropdown';\r\nimport axios from 'axios';\r\nimport Spinner from \"../Spinner\";\r\n\r\nexport class AddJobApplyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            url_attachment: '',\r\n            id_job: '',\r\n            jobDropdown: [],\r\n            usernameDropdown: [],\r\n            errors: [],\r\n            loading: false,\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loading: true}, () => {\r\n            let form = new FormData();\r\n            form.append('username', this.state.username)\r\n            form.append('id_job', this.state.id_job)\r\n            form.append('url_attachment', this.state.url_attachment)\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: 'https://103.14.21.56:7443/api/v1/jobs/job-apply/',\r\n                httpsAgent: agent,\r\n                headers: { \r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                data: form\r\n            })\r\n            .then(response => {\r\n                this.setState({\r\n                    redirect: true, \r\n                    loading: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                this.setState({errors: error.response.data, loading: false})\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    handleImage = (e) => {\r\n        this.setState({ \r\n            url_attachment: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({usernameDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        })\r\n    }\r\n\r\n    getAllJob = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/', {\r\n            httpsAgent: agent,\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') }\r\n        })\r\n        .then(response => {\r\n            this.setState({jobDropdown: response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUser();\r\n        this.getAllJob();\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.usernameDropdown.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const job = this.state.jobDropdown.map(job => {\r\n            return <JobDropdown key={job.id_job} job={job} />\r\n        })\r\n\r\n        let choose_file = this.state.url_attachment === '' ? \"Choose Image\" : this.state.url_attachment.name;\r\n\r\n        if (this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: \"/business/job-apply\",\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\" : \"main\"}>\r\n                <MDBRow >\r\n                    <MDBCol size=\"12\">\r\n                        <MDBCard>\r\n                            <MDBCardBody style={{ minHeight: 'calc(100vh - 95px)' }}>\r\n                                <MDBCardTitle className=\"teal-text\">Add Job Apply</MDBCardTitle>\r\n                                <form method=\"POST\" onSubmit={this.handleSubmit}>\r\n                                    <div className=\"form-group from-md\">\r\n                                        <select name=\"username\" id=\"username\" className=\"form-control\" onChange={this.handleChange}>\r\n                                            <option value=\"\">Choose User</option>\r\n                                            {user}\r\n                                        </select>\r\n                                        <small className=\"form-text text-muted\">Select user who apply this job </small>\r\n                                        {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                                    </div>\r\n                                    <div className=\"form-group from-md\">\r\n                                        <select name=\"id_job\" id=\"id_job\" className=\"form-control\" onChange={this.handleChange}>\r\n                                            <option value=\"\">Choose Job</option>\r\n                                            {job}\r\n                                        </select>\r\n                                        <small className=\"form-text text-muted\">Select job user</small>\r\n                                        {this.state.errors.id_job ? <span className=\"error-message\">{this.state.errors.id_job[0]}</span> : ''}\r\n                                    </div>\r\n                                    <div className=\"from-group form-md\" style={{marginTop: '2em'}}>\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"custom-file\">\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    name=\"url_attachment\"\r\n                                                    className=\"custom-file-input\"\r\n                                                    id=\"inputGroupFile01\"\r\n                                                    ref=\"upload\"\r\n                                                    accept=\"application/pdf\"\r\n                                                    onChange={this.handleImage} \r\n                                                    className={this.state.errors.url_attachment ? 'is-invalid' : ''}\r\n                                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                                />\r\n                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                    {choose_file}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                            Choose image for job vacancy\r\n                                        </small>\r\n                                        { this.state.errors.url_attachment ? <div className=\"error-message\">{ this.state.errors.url_attachment[0] }</div> : ''}\r\n                                    </div>\r\n                                    <div className=\"from-group\">\r\n                                        {this.state.loading ? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.4rem 2.12rem' }}><Spinner/></MDBBtn> : <MDBBtn type=\"submit\" color=\"purple\">Submit</MDBBtn>}\r\n                                    </div>\r\n                                </form>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobApplyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport AddJobApplyForm from './AddJobApplyForm'\r\n\r\nexport class AddJobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <AddJobApplyForm myPropsToggle={this.state.myPropsToggle} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJobApply\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBInput, MDBBtn, MDBIcon } from 'mdbreact'\r\nimport UserDropdown from '../data_job_vacancy/UserDropdown';\r\nimport JobDropdown from './JobDropdown';\r\nimport Axios from 'axios';\r\nimport Spinner from '../Spinner';\r\n\r\nexport class EditJobApplyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            id_job: '',\r\n            url_attachment: '',\r\n            redirect: false,\r\n            loading: false,\r\n            loadingJob: false,\r\n            loadingUser: false,\r\n            users: [],\r\n            jobs: [],\r\n            errors: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllJob()\r\n        this.getAllUser()  \r\n        this.getJobApply()  \r\n    }\r\n\r\n    getJobApply = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await Axios.get('https://103.14.21.56:7443/api/v1/jobs/job-apply/' + this.props.id, {\r\n            httpAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                username: res.data.username,\r\n                id_job: res.data.id_job,\r\n                url_attachment: res.data.url_attachment\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response)\r\n        })\r\n    }\r\n\r\n    getAllJob = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loadingJob: true}, () => {\r\n            Axios.get('https://103.14.21.56:7443/api/v1/jobs/job-vacancy/', {\r\n            httpAgent: agent,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    loadingJob: false,\r\n                    jobs: res.data,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllUser = async () => {\r\n        const https = require('https');\r\n        const agent = new https.Agent({\r\n            rejectUnauthorized: false\r\n        });\r\n\r\n        await this.setState({loadingUser: true}, () => {\r\n            Axios.get('https://103.14.21.56:7443/api/v1/users/user/', {\r\n                httpAgent: agent,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    loadingUser: false,\r\n                    users: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name] :  e.target.value })\r\n    }\r\n\r\n    fileHandler = (e) => {\r\n        this.setState({ \r\n            url_attachment: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        await this.setState({loading: true}, () => {\r\n            const https = require('https');\r\n            const agent = new https.Agent({\r\n                rejectUnauthorized: false\r\n            });\r\n\r\n            let form = new FormData();\r\n            form.append('username', this.state.username)\r\n            form.append('id_job', this.state.id_job)\r\n            form.append('url_attachment', this.state.url_attachment)\r\n\r\n            Axios({\r\n                method: 'PUT',\r\n                url: 'https://103.14.21.56:7443/api/v1/jobs/job-apply/' + this.props.id + '/',\r\n                httpAgent: agent,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\r\n                    'Content-Type': 'multipart/form-data'\r\n                },\r\n                data: form\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    loading: false,\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response)\r\n                this.setState({\r\n                    loading: false,\r\n                    errors: err.response.data\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let choose_file = this.state.url_attachment === '' ? \"Choose File\" : this.state.url_attachment.name\r\n\r\n        const users = this.state.users.map(user => {\r\n            return <UserDropdown key={user.id} user={user} />\r\n        })\r\n\r\n        const jobs = this.state.jobs.map(job => {\r\n            return <JobDropdown key={job.id_job} job={job} />\r\n        })\r\n\r\n        if(this.state.redirect === true) {\r\n            return <Redirect to={{\r\n                pathname: '/business/job-apply',\r\n                state: {\r\n                    myPropsToggle: this.props.myPropsToggle\r\n                }\r\n            }} />\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.myPropsToggle ? \"main-sidebar-inactive\": \"main\"}>\r\n                <MDBCard>\r\n                    <MDBCardBody className=\"col-md-6 col-sm-12\" style={{ minHeight: 'calc(100vh - 91px)' }}>\r\n                        <MDBCardTitle className=\"teal-text\">Edit Job Apply</MDBCardTitle>\r\n                        <form method=\"POST\" onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\r\n                            <div className=\"form-group form-md\">\r\n                                <select name=\"username\" id=\"username\" className={this.state.errors.username ? \"form-control is-invalid\" : \"form-control\"} onChange={this.handleChange} value={this.state.username}>\r\n                                    {this.state.loadingUser ? <option>Loading...</option> : users}\r\n                                </select>\r\n                                {this.state.errors.username ? <span className=\"error-message\">{this.state.errors.username[0]}</span> : ''}\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-md\">\r\n                                <select name=\"id_job\" id=\"id_job\" className={this.state.errors.id_job ? \"form-control is-invalid\" : \"form-control\"} onChange={this.handleChange} value={this.state.id_job}>\r\n                                    {this.state.loadingUser ? <option>Loading...</option> : jobs}\r\n                                </select>\r\n                                {this.state.errors.id_job ? <span className=\"error-message\">{this.state.errors.id_job[0]}</span> : ''}\r\n                            </div>\r\n\r\n                            <div className=\"form-md\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"custom-file\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            name=\"url_attachment\"\r\n                                            className=\"custom-file-input\"\r\n                                            id=\"inputGroupFile01\"\r\n                                            ref=\"upload\"\r\n                                            onChange={this.fileHandler} \r\n                                            className={this.state.errors.url_attachment ? 'is-invalid': ''}\r\n                                            aria-describedby=\"inputGroupFileAddon01\"\r\n                                        />\r\n                                        <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                            {choose_file}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <small id=\"expiredDateHelpText\" className=\"form-text text-muted\">\r\n                                    Choose pdf file\r\n                                </small>\r\n                                <div className=\"error-message\">{ this.state.errors.url_attachment ? this.state.errors.url_attachment[0] : ''}</div>\r\n                            </div>\r\n\r\n                            {this.state.loading ? <MDBBtn type=\"button\" color=\"purple\" style={{padding: '0.5rem 2.12rem', marginTop: '2em' }}><Spinner /></MDBBtn> : <MDBBtn type=\"submit\" color=\"purple\" style={{marginTop: '2em'}}>Submit</MDBBtn>}\r\n                        </form>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobApplyForm\r\n","import React, { Component, Fragment } from 'react'\r\nimport SideNav from '../SideNav'\r\nimport CustomNavbar from '../CustomNavbar'\r\nimport EditJobApplyForm from './EditJobApplyForm'\r\n\r\nexport class EditJobApply extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            myPropsToggle: props.location.state.myPropsToggle\r\n        }\r\n    }\r\n\r\n    handleToggle = (params) => {\r\n        this.setState({\r\n            myPropsToggle: params\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <SideNav businessProps={true} myPropsToggle={this.state.myPropsToggle} />\r\n                <CustomNavbar myPropsToggle={ (value) => this.handleToggle(value) } show={this.state.myPropsToggle} />\r\n                <EditJobApplyForm myPropsToggle={this.state.myPropsToggle} id={this.props.match.params.id} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditJobApply\r\n","import React, { Component } from 'react';\r\n// import { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"purple-gradient\" style={{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0 }}>\r\n                <div className=\"text-center\" style={{  width: '100%', height: '100%', margin: 'auto', marginTop: '200px' }}>\r\n                    <h1 style={{ fontWeight: '700', fontSize: '77px', fontFamily: 'sans-serif', color: '#330d4a' }}>404 :(</h1>\r\n                    <h1 style={{ color: '#330d4a' }}>OOPS! Page Not Found</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n        \r\nexport default NotFound","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\n\r\nimport User from \"./components/data_user/User\";\r\nimport EditUser from \"./components/data_user/EditUser\";\r\nimport AddUser from \"./components/data_user/AddUser\";\r\n\r\nimport Promotion from \"./components/data_promotion/Promotion\";\r\nimport AddPromotion from \"./components/data_promotion/AddPromotion\";\r\nimport EditPromotion from \"./components/data_promotion/EditPromotion\";\r\n// import Career from \"./components/data_career/Career\";\r\n\r\nimport CareerCategory from \"./components/data_career_category/CareerCategory\";\r\nimport AddCareerCategory from \"./components/data_career_category/AddCareerCategory\";\r\nimport EditCareerCategory from \"./components/data_career_category/EditCareerCategory\";\r\n\r\nimport JobVacancy from \"./components/data_job_vacancy/JobVacancy\";\r\nimport AddJobVacancy from \"./components/data_job_vacancy/AddJobVacancy\";\r\nimport EditJobVacancy from \"./components/data_job_vacancy/EditJobVacancy\";\r\n\r\nimport JobApply from \"./components/data_job_apply/JobApply\";\r\nimport AddJobApply from \"./components/data_job_apply/AddJobApply\";\r\nimport EditJobApply from \"./components/data_job_apply/EditJobApply\";\r\n\r\nimport NotFound from './components/NotFound';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n\r\n          <Route exact path=\"/home\" component={User} />\r\n          <Route path=\"/home/add-user/\" component={AddUser} />\r\n          <Route path=\"/home/edit-user/:id\" component={EditUser} />\r\n          \r\n          <Route exact path=\"/promotion\" component={Promotion} />\r\n          <Route path=\"/promotion/add-promotion/\" component={AddPromotion} />\r\n          <Route path=\"/promotion/edit-promotion/:id\" component={EditPromotion} />\r\n\r\n          {/* <Route exact path=\"/business\" component={Career} /> */}\r\n          <Route exact path=\"/business/career-category\" component={CareerCategory} />\r\n          <Route exact path=\"/business/career-category/add\" component={AddCareerCategory} />\r\n          <Route exact path=\"/business/career-category/edit/:id\" component={EditCareerCategory} />\r\n\r\n          <Route exact path=\"/business/job-vacancy\" component={JobVacancy} />\r\n          <Route exact path=\"/business/job-vacancy/add\" component={AddJobVacancy} />\r\n          <Route exact path=\"/business/job-vacancy/edit/:id\" component={EditJobVacancy} />\r\n\r\n          <Route exact path=\"/business/job-apply\" component={JobApply} />\r\n          <Route exact path=\"/business/job-apply/add\" component={AddJobApply} />\r\n          <Route exact path=\"/business/job-apply/edit/:id\" component={EditJobApply} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\n\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// serviceWorker.unregister();"],"sourceRoot":""}